(* autogenerated from rfc1813 *)
From Perennial.goose_lang Require Import prelude.
From Perennial.goose_lang Require Import ffi.disk_prelude.

Definition PROGRAM : expr := #(U32 100003).

Definition VERSION : expr := #(U32 3).

Definition NFS3_FHSIZE : expr := #(U32 64).

Definition NFS3_COOKIEVERFSIZE : expr := #(U32 8).

Definition NFS3_CREATEVERFSIZE : expr := #(U32 8).

Definition NFS3_WRITEVERFSIZE : expr := #(U32 8).

Definition Uint64: ty := uint64T.

Definition Uint32: ty := uint32T.

Definition Filename3: ty := stringT.

Definition Nfspath3: ty := stringT.

Definition Fileid3: ty := Uint64.

Definition Cookie3: ty := Uint64.

Definition Cookieverf3: ty := arrayT byteT.

Definition Createverf3: ty := arrayT byteT.

Definition Writeverf3: ty := arrayT byteT.

Definition Uid3: ty := Uint32.

Definition Gid3: ty := Uint32.

Definition Size3: ty := Uint64.

Definition Offset3: ty := Uint64.

Definition Mode3: ty := Uint32.

Definition Count3: ty := Uint32.

Definition Nfsstat3: ty := uint32T.

Definition NFS3_OK : expr := #(U32 0).

Definition NFS3ERR_PERM : expr := #(U32 1).

Definition NFS3ERR_NOENT : expr := #(U32 2).

Definition NFS3ERR_IO : expr := #(U32 5).

Definition NFS3ERR_NXIO : expr := #(U32 6).

Definition NFS3ERR_ACCES : expr := #(U32 13).

Definition NFS3ERR_EXIST : expr := #(U32 17).

Definition NFS3ERR_XDEV : expr := #(U32 18).

Definition NFS3ERR_NODEV : expr := #(U32 19).

Definition NFS3ERR_NOTDIR : expr := #(U32 20).

Definition NFS3ERR_ISDIR : expr := #(U32 21).

Definition NFS3ERR_INVAL : expr := #(U32 22).

Definition NFS3ERR_FBIG : expr := #(U32 27).

Definition NFS3ERR_NOSPC : expr := #(U32 28).

Definition NFS3ERR_ROFS : expr := #(U32 30).

Definition NFS3ERR_MLINK : expr := #(U32 31).

Definition NFS3ERR_NAMETOOLONG : expr := #(U32 63).

Definition NFS3ERR_NOTEMPTY : expr := #(U32 66).

Definition NFS3ERR_DQUOT : expr := #(U32 69).

Definition NFS3ERR_STALE : expr := #(U32 70).

Definition NFS3ERR_REMOTE : expr := #(U32 71).

Definition NFS3ERR_BADHANDLE : expr := #(U32 10001).

Definition NFS3ERR_NOT_SYNC : expr := #(U32 10002).

Definition NFS3ERR_BAD_COOKIE : expr := #(U32 10003).

Definition NFS3ERR_NOTSUPP : expr := #(U32 10004).

Definition NFS3ERR_TOOSMALL : expr := #(U32 10005).

Definition NFS3ERR_SERVERFAULT : expr := #(U32 10006).

Definition NFS3ERR_BADTYPE : expr := #(U32 10007).

Definition NFS3ERR_JUKEBOX : expr := #(U32 10008).

Definition Ftype3: ty := uint32T.

Definition NF3REG : expr := #(U32 1).

Definition NF3DIR : expr := #(U32 2).

Definition NF3BLK : expr := #(U32 3).

Definition NF3CHR : expr := #(U32 4).

Definition NF3LNK : expr := #(U32 5).

Definition NF3SOCK : expr := #(U32 6).

Definition NF3FIFO : expr := #(U32 7).

Module Specdata3.
  Definition S := struct.decl [
    "Specdata1" :: Uint32;
    "Specdata2" :: Uint32
  ].
End Specdata3.

Module Nfs_fh3.
  Definition S := struct.decl [
    "Data" :: slice.T byteT
  ].
End Nfs_fh3.

Module Nfstime3.
  Definition S := struct.decl [
    "Seconds" :: Uint32;
    "Nseconds" :: Uint32
  ].
End Nfstime3.

Module Fattr3.
  Definition S := struct.decl [
    "Ftype" :: Ftype3;
    "Mode" :: Mode3;
    "Nlink" :: Uint32;
    "Uid" :: Uid3;
    "Gid" :: Gid3;
    "Size" :: Size3;
    "Used" :: Size3;
    "Rdev" :: struct.t Specdata3.S;
    "Fsid" :: Uint64;
    "Fileid" :: Fileid3;
    "Atime" :: struct.t Nfstime3.S;
    "Mtime" :: struct.t Nfstime3.S;
    "Ctime" :: struct.t Nfstime3.S
  ].
End Fattr3.

Module Post_op_attr.
  Definition S := struct.decl [
    "Attributes_follow" :: boolT;
    "Attributes" :: struct.t Fattr3.S
  ].
End Post_op_attr.

Module Wcc_attr.
  Definition S := struct.decl [
    "Size" :: Size3;
    "Mtime" :: struct.t Nfstime3.S;
    "Ctime" :: struct.t Nfstime3.S
  ].
End Wcc_attr.

Module Pre_op_attr.
  Definition S := struct.decl [
    "Attributes_follow" :: boolT;
    "Attributes" :: struct.t Wcc_attr.S
  ].
End Pre_op_attr.

Module Wcc_data.
  Definition S := struct.decl [
    "Before" :: struct.t Pre_op_attr.S;
    "After" :: struct.t Post_op_attr.S
  ].
End Wcc_data.

Module Post_op_fh3.
  Definition S := struct.decl [
    "Handle_follows" :: boolT;
    "Handle" :: struct.t Nfs_fh3.S
  ].
End Post_op_fh3.

Definition Time_how: ty := uint32T.

Definition DONT_CHANGE : expr := #(U32 0).

Definition SET_TO_SERVER_TIME : expr := #(U32 1).

Definition SET_TO_CLIENT_TIME : expr := #(U32 2).

Module Set_mode3.
  Definition S := struct.decl [
    "Set_it" :: boolT;
    "Mode" :: Mode3
  ].
End Set_mode3.

Module Set_uid3.
  Definition S := struct.decl [
    "Set_it" :: boolT;
    "Uid" :: Uid3
  ].
End Set_uid3.

Module Set_gid3.
  Definition S := struct.decl [
    "Set_it" :: boolT;
    "Gid" :: Gid3
  ].
End Set_gid3.

Module Set_size3.
  Definition S := struct.decl [
    "Set_it" :: boolT;
    "Size" :: Size3
  ].
End Set_size3.

Module Set_atime.
  Definition S := struct.decl [
    "Set_it" :: Time_how;
    "Atime" :: struct.t Nfstime3.S
  ].
End Set_atime.

Module Set_mtime.
  Definition S := struct.decl [
    "Set_it" :: Time_how;
    "Mtime" :: struct.t Nfstime3.S
  ].
End Set_mtime.

Module Sattr3.
  Definition S := struct.decl [
    "Mode" :: struct.t Set_mode3.S;
    "Uid" :: struct.t Set_uid3.S;
    "Gid" :: struct.t Set_gid3.S;
    "Size" :: struct.t Set_size3.S;
    "Atime" :: struct.t Set_atime.S;
    "Mtime" :: struct.t Set_mtime.S
  ].
End Sattr3.

Module Diropargs3.
  Definition S := struct.decl [
    "Dir" :: struct.t Nfs_fh3.S;
    "Name" :: Filename3
  ].
End Diropargs3.

Definition NFS_PROGRAM : expr := #(U32 100003).

Definition NFS_V3 : expr := #(U32 3).

Definition NFSPROC3_NULL : expr := #(U32 0).

Definition NFSPROC3_GETATTR : expr := #(U32 1).

Definition NFSPROC3_SETATTR : expr := #(U32 2).

Definition NFSPROC3_LOOKUP : expr := #(U32 3).

Definition NFSPROC3_ACCESS : expr := #(U32 4).

Definition NFSPROC3_READLINK : expr := #(U32 5).

Definition NFSPROC3_READ : expr := #(U32 6).

Definition NFSPROC3_WRITE : expr := #(U32 7).

Definition NFSPROC3_CREATE : expr := #(U32 8).

Definition NFSPROC3_MKDIR : expr := #(U32 9).

Definition NFSPROC3_SYMLINK : expr := #(U32 10).

Definition NFSPROC3_MKNOD : expr := #(U32 11).

Definition NFSPROC3_REMOVE : expr := #(U32 12).

Definition NFSPROC3_RMDIR : expr := #(U32 13).

Definition NFSPROC3_RENAME : expr := #(U32 14).

Definition NFSPROC3_LINK : expr := #(U32 15).

Definition NFSPROC3_READDIR : expr := #(U32 16).

Definition NFSPROC3_READDIRPLUS : expr := #(U32 17).

Definition NFSPROC3_FSSTAT : expr := #(U32 18).

Definition NFSPROC3_FSINFO : expr := #(U32 19).

Definition NFSPROC3_PATHCONF : expr := #(U32 20).

Definition NFSPROC3_COMMIT : expr := #(U32 21).

Module GETATTR3args.
  Definition S := struct.decl [
    "Object" :: struct.t Nfs_fh3.S
  ].
End GETATTR3args.

Module GETATTR3resok.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Fattr3.S
  ].
End GETATTR3resok.

Module GETATTR3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t GETATTR3resok.S
  ].
End GETATTR3res.

Module Sattrguard3.
  Definition S := struct.decl [
    "Check" :: boolT;
    "Obj_ctime" :: struct.t Nfstime3.S
  ].
End Sattrguard3.

Module SETATTR3args.
  Definition S := struct.decl [
    "Object" :: struct.t Nfs_fh3.S;
    "New_attributes" :: struct.t Sattr3.S;
    "Guard" :: struct.t Sattrguard3.S
  ].
End SETATTR3args.

Module SETATTR3resok.
  Definition S := struct.decl [
    "Obj_wcc" :: struct.t Wcc_data.S
  ].
End SETATTR3resok.

Module SETATTR3resfail.
  Definition S := struct.decl [
    "Obj_wcc" :: struct.t Wcc_data.S
  ].
End SETATTR3resfail.

Module SETATTR3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t SETATTR3resok.S;
    "Resfail" :: struct.t SETATTR3resfail.S
  ].
End SETATTR3res.

Module LOOKUP3args.
  Definition S := struct.decl [
    "What" :: struct.t Diropargs3.S
  ].
End LOOKUP3args.

Module LOOKUP3resok.
  Definition S := struct.decl [
    "Object" :: struct.t Nfs_fh3.S;
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Dir_attributes" :: struct.t Post_op_attr.S
  ].
End LOOKUP3resok.

Module LOOKUP3resfail.
  Definition S := struct.decl [
    "Dir_attributes" :: struct.t Post_op_attr.S
  ].
End LOOKUP3resfail.

Module LOOKUP3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t LOOKUP3resok.S;
    "Resfail" :: struct.t LOOKUP3resfail.S
  ].
End LOOKUP3res.

Definition ACCESS3_READ : expr := #(U32 1).

Definition ACCESS3_LOOKUP : expr := #(U32 2).

Definition ACCESS3_MODIFY : expr := #(U32 4).

Definition ACCESS3_EXTEND : expr := #(U32 8).

Definition ACCESS3_DELETE : expr := #(U32 16).

Definition ACCESS3_EXECUTE : expr := #(U32 32).

Module ACCESS3args.
  Definition S := struct.decl [
    "Object" :: struct.t Nfs_fh3.S;
    "Access" :: Uint32
  ].
End ACCESS3args.

Module ACCESS3resok.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Access" :: Uint32
  ].
End ACCESS3resok.

Module ACCESS3resfail.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S
  ].
End ACCESS3resfail.

Module ACCESS3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t ACCESS3resok.S;
    "Resfail" :: struct.t ACCESS3resfail.S
  ].
End ACCESS3res.

Module READLINK3args.
  Definition S := struct.decl [
    "Symlink" :: struct.t Nfs_fh3.S
  ].
End READLINK3args.

Module READLINK3resok.
  Definition S := struct.decl [
    "Symlink_attributes" :: struct.t Post_op_attr.S;
    "Data" :: Nfspath3
  ].
End READLINK3resok.

Module READLINK3resfail.
  Definition S := struct.decl [
    "Symlink_attributes" :: struct.t Post_op_attr.S
  ].
End READLINK3resfail.

Module READLINK3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t READLINK3resok.S;
    "Resfail" :: struct.t READLINK3resfail.S
  ].
End READLINK3res.

Module READ3args.
  Definition S := struct.decl [
    "File" :: struct.t Nfs_fh3.S;
    "Offset" :: Offset3;
    "Count" :: Count3
  ].
End READ3args.

Module READ3resok.
  Definition S := struct.decl [
    "File_attributes" :: struct.t Post_op_attr.S;
    "Count" :: Count3;
    "Eof" :: boolT;
    "Data" :: slice.T byteT
  ].
End READ3resok.

Module READ3resfail.
  Definition S := struct.decl [
    "File_attributes" :: struct.t Post_op_attr.S
  ].
End READ3resfail.

Module READ3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t READ3resok.S;
    "Resfail" :: struct.t READ3resfail.S
  ].
End READ3res.

Definition Stable_how: ty := uint32T.

Definition UNSTABLE : expr := #(U32 0).

Definition DATA_SYNC : expr := #(U32 1).

Definition FILE_SYNC : expr := #(U32 2).

Module WRITE3args.
  Definition S := struct.decl [
    "File" :: struct.t Nfs_fh3.S;
    "Offset" :: Offset3;
    "Count" :: Count3;
    "Stable" :: Stable_how;
    "Data" :: slice.T byteT
  ].
End WRITE3args.

Module WRITE3resok.
  Definition S := struct.decl [
    "File_wcc" :: struct.t Wcc_data.S;
    "Count" :: Count3;
    "Committed" :: Stable_how;
    "Verf" :: Writeverf3
  ].
End WRITE3resok.

Module WRITE3resfail.
  Definition S := struct.decl [
    "File_wcc" :: struct.t Wcc_data.S
  ].
End WRITE3resfail.

Module WRITE3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t WRITE3resok.S;
    "Resfail" :: struct.t WRITE3resfail.S
  ].
End WRITE3res.

Definition Createmode3: ty := uint32T.

Definition UNCHECKED : expr := #(U32 0).

Definition GUARDED : expr := #(U32 1).

Definition EXCLUSIVE : expr := #(U32 2).

Module Createhow3.
  Definition S := struct.decl [
    "Mode" :: Createmode3;
    "Obj_attributes" :: struct.t Sattr3.S;
    "Verf" :: Createverf3
  ].
End Createhow3.

Module CREATE3args.
  Definition S := struct.decl [
    "Where" :: struct.t Diropargs3.S;
    "How" :: struct.t Createhow3.S
  ].
End CREATE3args.

Module CREATE3resok.
  Definition S := struct.decl [
    "Obj" :: struct.t Post_op_fh3.S;
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End CREATE3resok.

Module CREATE3resfail.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End CREATE3resfail.

Module CREATE3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t CREATE3resok.S;
    "Resfail" :: struct.t CREATE3resfail.S
  ].
End CREATE3res.

Module MKDIR3args.
  Definition S := struct.decl [
    "Where" :: struct.t Diropargs3.S;
    "Attributes" :: struct.t Sattr3.S
  ].
End MKDIR3args.

Module MKDIR3resok.
  Definition S := struct.decl [
    "Obj" :: struct.t Post_op_fh3.S;
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End MKDIR3resok.

Module MKDIR3resfail.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End MKDIR3resfail.

Module MKDIR3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t MKDIR3resok.S;
    "Resfail" :: struct.t MKDIR3resfail.S
  ].
End MKDIR3res.

Module Symlinkdata3.
  Definition S := struct.decl [
    "Symlink_attributes" :: struct.t Sattr3.S;
    "Symlink_data" :: Nfspath3
  ].
End Symlinkdata3.

Module SYMLINK3args.
  Definition S := struct.decl [
    "Where" :: struct.t Diropargs3.S;
    "Symlink" :: struct.t Symlinkdata3.S
  ].
End SYMLINK3args.

Module SYMLINK3resok.
  Definition S := struct.decl [
    "Obj" :: struct.t Post_op_fh3.S;
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End SYMLINK3resok.

Module SYMLINK3resfail.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End SYMLINK3resfail.

Module SYMLINK3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t SYMLINK3resok.S;
    "Resfail" :: struct.t SYMLINK3resfail.S
  ].
End SYMLINK3res.

Module Devicedata3.
  Definition S := struct.decl [
    "Dev_attributes" :: struct.t Sattr3.S;
    "Spec" :: struct.t Specdata3.S
  ].
End Devicedata3.

Module Mknoddata3.
  Definition S := struct.decl [
    "Ftype" :: Ftype3;
    "Device" :: struct.t Devicedata3.S;
    "Pipe_attributes" :: struct.t Sattr3.S
  ].
End Mknoddata3.

Module MKNOD3args.
  Definition S := struct.decl [
    "Where" :: struct.t Diropargs3.S;
    "What" :: struct.t Mknoddata3.S
  ].
End MKNOD3args.

Module MKNOD3resok.
  Definition S := struct.decl [
    "Obj" :: struct.t Post_op_fh3.S;
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End MKNOD3resok.

Module MKNOD3resfail.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End MKNOD3resfail.

Module MKNOD3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t MKNOD3resok.S;
    "Resfail" :: struct.t MKNOD3resfail.S
  ].
End MKNOD3res.

Module REMOVE3args.
  Definition S := struct.decl [
    "Object" :: struct.t Diropargs3.S
  ].
End REMOVE3args.

Module REMOVE3resok.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End REMOVE3resok.

Module REMOVE3resfail.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End REMOVE3resfail.

Module REMOVE3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t REMOVE3resok.S;
    "Resfail" :: struct.t REMOVE3resfail.S
  ].
End REMOVE3res.

Module RMDIR3args.
  Definition S := struct.decl [
    "Object" :: struct.t Diropargs3.S
  ].
End RMDIR3args.

Module RMDIR3resok.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End RMDIR3resok.

Module RMDIR3resfail.
  Definition S := struct.decl [
    "Dir_wcc" :: struct.t Wcc_data.S
  ].
End RMDIR3resfail.

Module RMDIR3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t RMDIR3resok.S;
    "Resfail" :: struct.t RMDIR3resfail.S
  ].
End RMDIR3res.

Module RENAME3args.
  Definition S := struct.decl [
    "From" :: struct.t Diropargs3.S;
    "To" :: struct.t Diropargs3.S
  ].
End RENAME3args.

Module RENAME3resok.
  Definition S := struct.decl [
    "Fromdir_wcc" :: struct.t Wcc_data.S;
    "Todir_wcc" :: struct.t Wcc_data.S
  ].
End RENAME3resok.

Module RENAME3resfail.
  Definition S := struct.decl [
    "Fromdir_wcc" :: struct.t Wcc_data.S;
    "Todir_wcc" :: struct.t Wcc_data.S
  ].
End RENAME3resfail.

Module RENAME3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t RENAME3resok.S;
    "Resfail" :: struct.t RENAME3resfail.S
  ].
End RENAME3res.

Module LINK3args.
  Definition S := struct.decl [
    "File" :: struct.t Nfs_fh3.S;
    "Link" :: struct.t Diropargs3.S
  ].
End LINK3args.

Module LINK3resok.
  Definition S := struct.decl [
    "File_attributes" :: struct.t Post_op_attr.S;
    "Linkdir_wcc" :: struct.t Wcc_data.S
  ].
End LINK3resok.

Module LINK3resfail.
  Definition S := struct.decl [
    "File_attributes" :: struct.t Post_op_attr.S;
    "Linkdir_wcc" :: struct.t Wcc_data.S
  ].
End LINK3resfail.

Module LINK3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t LINK3resok.S;
    "Resfail" :: struct.t LINK3resfail.S
  ].
End LINK3res.

Module READDIR3args.
  Definition S := struct.decl [
    "Dir" :: struct.t Nfs_fh3.S;
    "Cookie" :: Cookie3;
    "Cookieverf" :: Cookieverf3;
    "Count" :: Count3
  ].
End READDIR3args.

Module Entry3.
  Definition S := struct.decl [
    "Fileid" :: Fileid3;
    "Name" :: Filename3;
    "Cookie" :: Cookie3;
    "Nextentry" :: refT anyT
  ].
End Entry3.

Module Dirlist3.
  Definition S := struct.decl [
    "Entries" :: struct.ptrT Entry3.S;
    "Eof" :: boolT
  ].
End Dirlist3.

Module READDIR3resok.
  Definition S := struct.decl [
    "Dir_attributes" :: struct.t Post_op_attr.S;
    "Cookieverf" :: Cookieverf3;
    "Reply" :: struct.t Dirlist3.S
  ].
End READDIR3resok.

Module READDIR3resfail.
  Definition S := struct.decl [
    "Dir_attributes" :: struct.t Post_op_attr.S
  ].
End READDIR3resfail.

Module READDIR3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t READDIR3resok.S;
    "Resfail" :: struct.t READDIR3resfail.S
  ].
End READDIR3res.

Module READDIRPLUS3args.
  Definition S := struct.decl [
    "Dir" :: struct.t Nfs_fh3.S;
    "Cookie" :: Cookie3;
    "Cookieverf" :: Cookieverf3;
    "Dircount" :: Count3;
    "Maxcount" :: Count3
  ].
End READDIRPLUS3args.

Module Entryplus3.
  Definition S := struct.decl [
    "Fileid" :: Fileid3;
    "Name" :: Filename3;
    "Cookie" :: Cookie3;
    "Name_attributes" :: struct.t Post_op_attr.S;
    "Name_handle" :: struct.t Post_op_fh3.S;
    "Nextentry" :: refT anyT
  ].
End Entryplus3.

Module Dirlistplus3.
  Definition S := struct.decl [
    "Entries" :: struct.ptrT Entryplus3.S;
    "Eof" :: boolT
  ].
End Dirlistplus3.

Module READDIRPLUS3resok.
  Definition S := struct.decl [
    "Dir_attributes" :: struct.t Post_op_attr.S;
    "Cookieverf" :: Cookieverf3;
    "Reply" :: struct.t Dirlistplus3.S
  ].
End READDIRPLUS3resok.

Module READDIRPLUS3resfail.
  Definition S := struct.decl [
    "Dir_attributes" :: struct.t Post_op_attr.S
  ].
End READDIRPLUS3resfail.

Module READDIRPLUS3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t READDIRPLUS3resok.S;
    "Resfail" :: struct.t READDIRPLUS3resfail.S
  ].
End READDIRPLUS3res.

Module FSSTAT3args.
  Definition S := struct.decl [
    "Fsroot" :: struct.t Nfs_fh3.S
  ].
End FSSTAT3args.

Module FSSTAT3resok.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Tbytes" :: Size3;
    "Fbytes" :: Size3;
    "Abytes" :: Size3;
    "Tfiles" :: Size3;
    "Ffiles" :: Size3;
    "Afiles" :: Size3;
    "Invarsec" :: Uint32
  ].
End FSSTAT3resok.

Module FSSTAT3resfail.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S
  ].
End FSSTAT3resfail.

Module FSSTAT3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t FSSTAT3resok.S;
    "Resfail" :: struct.t FSSTAT3resfail.S
  ].
End FSSTAT3res.

Definition FSF3_LINK : expr := #(U32 1).

Definition FSF3_SYMLINK : expr := #(U32 2).

Definition FSF3_HOMOGENEOUS : expr := #(U32 8).

Definition FSF3_CANSETTIME : expr := #(U32 16).

Module FSINFO3args.
  Definition S := struct.decl [
    "Fsroot" :: struct.t Nfs_fh3.S
  ].
End FSINFO3args.

Module FSINFO3resok.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Rtmax" :: Uint32;
    "Rtpref" :: Uint32;
    "Rtmult" :: Uint32;
    "Wtmax" :: Uint32;
    "Wtpref" :: Uint32;
    "Wtmult" :: Uint32;
    "Dtpref" :: Uint32;
    "Maxfilesize" :: Size3;
    "Time_delta" :: struct.t Nfstime3.S;
    "Properties" :: Uint32
  ].
End FSINFO3resok.

Module FSINFO3resfail.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S
  ].
End FSINFO3resfail.

Module FSINFO3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t FSINFO3resok.S;
    "Resfail" :: struct.t FSINFO3resfail.S
  ].
End FSINFO3res.

Module PATHCONF3args.
  Definition S := struct.decl [
    "Object" :: struct.t Nfs_fh3.S
  ].
End PATHCONF3args.

Module PATHCONF3resok.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S;
    "Linkmax" :: Uint32;
    "Name_max" :: Uint32;
    "No_trunc" :: boolT;
    "Chown_restricted" :: boolT;
    "Case_insensitive" :: boolT;
    "Case_preserving" :: boolT
  ].
End PATHCONF3resok.

Module PATHCONF3resfail.
  Definition S := struct.decl [
    "Obj_attributes" :: struct.t Post_op_attr.S
  ].
End PATHCONF3resfail.

Module PATHCONF3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t PATHCONF3resok.S;
    "Resfail" :: struct.t PATHCONF3resfail.S
  ].
End PATHCONF3res.

Module COMMIT3args.
  Definition S := struct.decl [
    "File" :: struct.t Nfs_fh3.S;
    "Offset" :: Offset3;
    "Count" :: Count3
  ].
End COMMIT3args.

Module COMMIT3resok.
  Definition S := struct.decl [
    "File_wcc" :: struct.t Wcc_data.S;
    "Verf" :: Writeverf3
  ].
End COMMIT3resok.

Module COMMIT3resfail.
  Definition S := struct.decl [
    "File_wcc" :: struct.t Wcc_data.S
  ].
End COMMIT3resfail.

Module COMMIT3res.
  Definition S := struct.decl [
    "Status" :: Nfsstat3;
    "Resok" :: struct.t COMMIT3resok.S;
    "Resfail" :: struct.t COMMIT3resfail.S
  ].
End COMMIT3res.

Definition MNTPATHLEN3 : expr := #(U32 1024).

Definition MNTNAMLEN3 : expr := #(U32 255).

Definition FHSIZE3 : expr := #(U32 64).

Definition Fhandle3: ty := slice.T byteT.

Definition Dirpath3: ty := stringT.

Definition Name3: ty := stringT.

Definition Mountstat3: ty := uint32T.

Definition MNT3_OK : expr := #(U32 0).

Definition MNT3ERR_PERM : expr := #(U32 1).

Definition MNT3ERR_NOENT : expr := #(U32 2).

Definition MNT3ERR_IO : expr := #(U32 5).

Definition MNT3ERR_ACCES : expr := #(U32 13).

Definition MNT3ERR_NOTDIR : expr := #(U32 20).

Definition MNT3ERR_INVAL : expr := #(U32 22).

Definition MNT3ERR_NAMETOOLONG : expr := #(U32 63).

Definition MNT3ERR_NOTSUPP : expr := #(U32 10004).

Definition MNT3ERR_SERVERFAULT : expr := #(U32 10006).

Definition MOUNT_PROGRAM : expr := #(U32 100005).

Definition MOUNT_V3 : expr := #(U32 3).

Definition MOUNTPROC3_NULL : expr := #(U32 0).

Definition MOUNTPROC3_MNT : expr := #(U32 1).

Definition MOUNTPROC3_DUMP : expr := #(U32 2).

Definition MOUNTPROC3_UMNT : expr := #(U32 3).

Definition MOUNTPROC3_UMNTALL : expr := #(U32 4).

Definition MOUNTPROC3_EXPORT : expr := #(U32 5).

Module Mountres3_ok.
  Definition S := struct.decl [
    "Fhandle" :: Fhandle3;
    "Auth_flavors" :: slice.T uint32T
  ].
End Mountres3_ok.

Module Mountres3.
  Definition S := struct.decl [
    "Fhs_status" :: Mountstat3;
    "Mountinfo" :: struct.t Mountres3_ok.S
  ].
End Mountres3.

Module Mount3.
  Definition S := struct.decl [
    "Ml_hostname" :: Name3;
    "Ml_directory" :: Dirpath3;
    "Ml_next" :: refT anyT
  ].
End Mount3.

Module Mountopt3.
  Definition S := struct.decl [
    "P" :: struct.ptrT Mount3.S
  ].
End Mountopt3.

Module Groups3.
  Definition S := struct.decl [
    "Gr_name" :: Name3;
    "Gr_next" :: refT anyT
  ].
End Groups3.

Module Exports3.
  Definition S := struct.decl [
    "Ex_dir" :: Dirpath3;
    "Ex_groups" :: struct.ptrT Groups3.S;
    "Ex_next" :: refT anyT
  ].
End Exports3.

Module Exportsopt3.
  Definition S := struct.decl [
    "P" :: struct.ptrT Exports3.S
  ].
End Exportsopt3.
