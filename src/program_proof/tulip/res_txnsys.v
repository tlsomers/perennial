(** Global resources. *)
From Perennial.program_proof Require Import grove_prelude.
From Perennial.program_proof.rsm Require Import big_sep.
From Perennial.program_proof.rsm.pure Require Import vslice fin_maps.
From Perennial.program_proof.tulip Require Import base.

Section res.
  Context `{!tulip_ghostG Σ}.
  (* TODO: remove this once we have real defintions for resources. *)
  Implicit Type (γ : tulip_names).

  Section cmtd_hist.

    (** History generated by committed transactions for a certain key. *)

    Definition own_cmtd_hist γ (k : dbkey) (h : dbhist) : iProp Σ.
    Admitted.

    Definition is_cmtd_hist_lb γ (k : dbkey) (h : dbhist) : iProp Σ.
    Admitted.

    #[global]
      Instance is_cmtd_hist_lb_persistent α key hist :
      Persistent (is_cmtd_hist_lb α key hist).
    Admitted.

    Definition is_cmtd_hist_length_lb γ key n : iProp Σ :=
      ∃ lb, is_cmtd_hist_lb γ key lb ∗ ⌜(n ≤ length lb)%nat⌝.

    Lemma cmtd_hist_update {γ k h1} h2 :
      prefix h1 h2 ->
      own_cmtd_hist γ k h1 ==∗
      own_cmtd_hist γ k h2.
    Admitted.

    Lemma cmtd_hist_witness {γ k h} :
      own_cmtd_hist γ k h -∗
      is_cmtd_hist_lb γ k h.
    Admitted.

    Lemma cmtd_hist_prefix {γ k h hlb} :
      own_cmtd_hist γ k h -∗
      is_cmtd_hist_lb γ k hlb -∗
      ⌜prefix hlb h⌝.
    Admitted.

  End cmtd_hist.

  Section lnrz_hist.

    (** History generated by linearized transactions for a certain key. *)

    Definition own_lnrz_hist γ (k : dbkey) (l : dbhist) : iProp Σ.
    Admitted.

    Definition is_lnrz_hist_lb γ (k : dbkey) (l : dbhist) : iProp Σ.
    Admitted.

    #[global]
      Instance is_lnrz_hist_lb_persistent α key hist :
      Persistent (is_lnrz_hist_lb α key hist).
    Admitted.

    Lemma lnrz_hist_update {γ k l} l' :
      prefix l l' ->
      own_lnrz_hist γ k l ==∗
      own_lnrz_hist γ k l'.
    Admitted.

    Lemma lnrz_hist_witness γ k l :
      own_lnrz_hist γ k l -∗
      is_lnrz_hist_lb γ k l.
    Admitted.

    Lemma lnrz_hist_prefix {γ k h hlb} :
      own_lnrz_hist γ k h -∗
      is_lnrz_hist_lb γ k hlb -∗
      ⌜prefix hlb h⌝.
    Admitted.

    Definition is_lnrz_hist_at γ (k : dbkey) (ts : nat) (v : dbval) : iProp Σ :=
      ∃ lb, is_lnrz_hist_lb γ k lb ∗ ⌜lb !! ts = Some v⌝.

    Lemma lnrz_hist_lookup γ k h ts v :
      own_lnrz_hist γ k h -∗
      is_lnrz_hist_at γ k ts v -∗
      ⌜h !! ts = Some v⌝.
    Proof.
      iIntros "Hauth (%lb & #Hlb & %Hv)".
      iDestruct (lnrz_hist_prefix with "Hauth Hlb") as %Hprefix.
      iPureIntro.
      by eapply prefix_lookup_Some.
    Qed.

  End lnrz_hist.

  Section txn_res.

    (** Mapping from transaction IDs to results (i.e., committed or aborted) of
    the transactions. *)

    Definition own_txn_resm γ (resm : gmap nat txnres) : iProp Σ.
    Admitted.

    Definition is_txn_res γ (ts : nat) (res : txnres) : iProp Σ.
    Admitted.

    #[global]
    Instance is_txn_res_persistent γ ts res :
      Persistent (is_txn_res γ ts res).
    Admitted.

    Definition is_txn_committed γ ts wrs :=
      is_txn_res γ ts (ResCommitted wrs).

    Definition is_txn_aborted γ ts :=
      is_txn_res γ ts ResAborted.

    Lemma txn_res_insert {γ resm} ts res :
      resm !! ts = None ->
      own_txn_resm γ resm ==∗
      own_txn_resm γ (<[ts := res]> resm).
    Admitted.

    Lemma txn_res_witness γ resm ts res :
      resm !! ts = Some res ->
      own_txn_resm γ resm -∗
      is_txn_res γ ts res.
    Admitted.

    Lemma txn_res_lookup γ resm ts res :
      own_txn_resm γ resm -∗
      is_txn_res γ ts res -∗
      ⌜resm !! ts = Some res⌝.
    Admitted.

  End txn_res.

  Section txn_oneshot_wrs.

    (** Transaction write-sets. This resource allows us to specify that
    [CmdPrep] is submitted to only the participant group, as encoded in
    [safe_submit]. Without which we won't be able to prove that learning a
    commit under an aborted state is impossible, as a non-participant group
    could have received [CmdPrep] and aborted. *)

    Definition own_txn_oneshot_wrsm γ (wrsm : gmap nat (option dbmap)) : iProp Σ.
    Admitted.

    Definition own_txn_oneshot_wrs γ (ts : nat) (dq : dfrac) (owrs : option dbmap) : iProp Σ.
    Admitted.

    Definition own_txn_reserved_wrs γ (ts : nat) :=
      own_txn_oneshot_wrs γ ts (DfracOwn 1) None.

    Definition is_txn_canceled_wrs γ (ts : nat) :=
      own_txn_oneshot_wrs γ ts DfracDiscarded None.

    Definition is_txn_wrs γ (ts : nat) (wrs : dbmap) :=
      own_txn_oneshot_wrs γ ts DfracDiscarded (Some wrs).

    #[global]
    Instance txn_wrs_cancel_persistent γ ts :
      Persistent (is_txn_canceled_wrs γ ts).
    Admitted.

    #[global]
    Instance is_txn_wrs_persistent γ ts wrs :
      Persistent (is_txn_wrs γ ts wrs).
    Admitted.

    Lemma txn_oneshot_wrs_allocate γ wrsm ts :
      wrsm !! ts = None ->
      own_txn_oneshot_wrsm γ wrsm ==∗
      own_txn_oneshot_wrsm γ (<[ts := None]> wrsm) ∗ own_txn_reserved_wrs γ ts.
    Admitted.

    Lemma txn_oneshot_wrs_cancel γ ts :
      own_txn_reserved_wrs γ ts ==∗ is_txn_canceled_wrs γ ts.
    Admitted.

    Lemma txn_oneshot_wrs_update γ wrsm ts wrs :
      own_txn_reserved_wrs γ ts -∗
      own_txn_oneshot_wrsm γ wrsm ==∗
      own_txn_oneshot_wrsm γ (<[ts := Some wrs]> wrsm) ∗ is_txn_wrs γ ts wrs.
    Admitted.

    Lemma txn_oneshot_wrs_lookup γ wrsm ts dq owrs :
      own_txn_oneshot_wrs γ ts dq owrs -∗
      own_txn_oneshot_wrsm γ wrsm -∗
      ⌜wrsm !! ts = Some owrs⌝.
    Admitted.

    Lemma txn_oneshot_wrs_agree γ ts dq1 dq2 owrs1 owrs2 :
      own_txn_oneshot_wrs γ ts dq1 owrs1 -∗
      own_txn_oneshot_wrs γ ts dq2 owrs2 -∗
      ⌜owrs2 = owrs1⌝.
    Admitted.

    Lemma txn_wrs_lookup γ wrsm ts wrs :
      is_txn_wrs γ ts wrs -∗
      own_txn_oneshot_wrsm γ wrsm -∗
      ⌜wrsm !! ts = Some (Some wrs)⌝.
    Proof. iIntros "#Hwrs Hwrsm". by iApply txn_oneshot_wrs_lookup. Qed.

    Lemma txn_oneshot_wrs_elem_of γ wrsm ts :
      own_txn_reserved_wrs γ ts -∗
      own_txn_oneshot_wrsm γ wrsm -∗
      ⌜ts ∈ dom wrsm⌝.
    Proof.
      iIntros "Hwrs Hwrsm".
      iDestruct (txn_oneshot_wrs_lookup with "Hwrs Hwrsm") as %Hlookup.
      by apply elem_of_dom_2 in Hlookup.
    Qed.

    Lemma txn_wrs_agree γ ts wrs1 wrs2 :
      is_txn_wrs γ ts wrs1 -∗
      is_txn_wrs γ ts wrs2 -∗
      ⌜wrs2 = wrs1⌝.
    Admitted.

  End txn_oneshot_wrs.

  Section lnrz_tid.

    (** Timestamps of transactions that have linearized. *)

    Definition own_lnrz_tids γ (tids : gset nat) : iProp Σ.
    Admitted.

    Definition is_lnrz_tid γ (tid : nat) : iProp Σ.
    Admitted.

    #[global]
      Instance is_lnrz_tid_persistent γ tid :
      Persistent (is_lnrz_tid γ tid).
    Admitted.

    Lemma lnrz_tid_insert γ tids tid :
      tid ∉ tids ->
      own_lnrz_tids γ tids ==∗
      own_lnrz_tids γ ({[ tid ]} ∪ tids) ∗ is_lnrz_tid γ tid.
    Admitted.

    Lemma lnrz_tid_elem_of γ tids tid :
      own_lnrz_tids γ tids -∗
      is_lnrz_tid γ tid -∗
      ⌜tid ∈ tids⌝.
    Admitted.

  End lnrz_tid.

  Section wabt_tid.

    (** Timestamps of transactions predicted to abort. *)

    Definition own_wabt_tids γ (tids : gset nat) : iProp Σ.
    Admitted.

    Definition own_wabt_tid γ (tid : nat) : iProp Σ.
    Admitted.

    Lemma wabt_tid_insert {γ tids} tid :
      tid ∉ tids ->
      own_wabt_tids γ tids ==∗
      own_wabt_tids γ ({[ tid ]} ∪ tids) ∗ own_wabt_tid γ tid.
    Admitted.

    Lemma wabt_tid_delete {γ tids} tid :
      own_wabt_tid γ tid -∗
      own_wabt_tids γ tids ==∗
      own_wabt_tids γ (tids ∖ {[ tid ]}).
    Admitted.

    Lemma wabt_tid_elem_of γ tids tid :
      own_wabt_tids γ tids -∗
      own_wabt_tid γ tid -∗
      ⌜tid ∈ tids⌝.
    Admitted.

  End wabt_tid.

  Section cmt_tmod.

    (** Pairs of timestamp and write-set of transactions predicted to commit or
    has committed. *)

    Definition own_cmt_tmods γ (tmods : gmap nat dbmap) : iProp Σ.
    Admitted.

    Definition own_cmt_tmod γ (tid : nat) (wrs : dbmap) : iProp Σ.
    Admitted.

    Lemma cmt_tmod_insert {γ tmods} tid wrs :
      tmods !! tid = None ->
      own_cmt_tmods γ tmods ==∗
      own_cmt_tmods γ (<[tid := wrs]> tmods) ∗ own_cmt_tmod γ tid wrs.
    Admitted.

    Lemma cmt_tmod_lookup γ tmods tid wrs :
      own_cmt_tmods γ tmods -∗
      own_cmt_tmod γ tid wrs -∗
      ⌜tmods !! tid = Some wrs⌝.
    Admitted.

  End cmt_tmod.

  Section excl_tid.

    (** Exclusive tokens of transaction IDs. *)

    Definition own_excl_tids γ (tids : gset nat) : iProp Σ.
    Admitted.

    Definition own_excl_tid γ (tid : nat) : iProp Σ.
    Admitted.

    Lemma excl_tid_insert γ tids tid :
      tid ∉ tids ->
      own_excl_tids γ tids ==∗
      own_excl_tids γ ({[ tid ]} ∪ tids) ∗ own_excl_tid γ tid.
    Admitted.

    Lemma excl_tid_ne γ tid1 tid2 :
      own_excl_tid γ tid1 -∗
      own_excl_tid γ tid2 -∗
      ⌜tid2 ≠ tid1⌝.
    Admitted.

    Lemma excl_tid_not_elem_of γ tids tid :
      ([∗ set] t ∈ tids, own_excl_tid γ t) -∗
      own_excl_tid γ tid -∗
      ⌜tid ∉ tids⌝.
    Proof.
      iIntros "Htids Htid".
      destruct (decide (tid ∈ tids)) as [Hin | ?]; last done.
      iDestruct (big_sepS_elem_of with "Htids") as "Htid'"; first apply Hin.
      by iDestruct (excl_tid_ne with "Htid Htid'") as %?.
    Qed.

  End excl_tid.

  Section txn_postcond.

    (** Transaction post-conditions. Might need a [ghost_map nat gname] and a [saved_prop]? *)

    Definition own_txn_postconds γ (posts : gmap nat (dbmap -> Prop)) : iProp Σ.
    Admitted.

    Definition is_txn_postcond γ (tid : nat) (post : dbmap -> Prop) : iProp Σ.
    Admitted.

    #[global]
      Instance is_txn_postcond_persistent γ tid post :
      Persistent (is_txn_postcond γ tid post).
    Admitted.

    Lemma txn_postcond_insert γ posts tid post :
      posts !! tid = None ->
      own_txn_postconds γ posts ==∗
      own_txn_postconds γ (<[tid := post]> posts) ∗ is_txn_postcond γ tid post.
    Admitted.

    Lemma txn_postcond_elem_of γ posts tid post :
      own_txn_postconds γ posts -∗
      is_txn_postcond γ tid post -∗
      ⌜posts !! tid = Some post⌝.
    Admitted.

    Lemma txn_postcond_agree γ tid post1 post2 :
      is_txn_postcond γ tid post1 -∗
      is_txn_postcond γ tid post2 -∗
      ⌜post2 = post1⌝.
    Admitted.

  End txn_postcond.

  Section largest_ts.

    (** Largest timestamp assigned. *)

    Definition own_largest_ts γ (ts : nat) : iProp Σ.
    Admitted.

    Definition is_largest_ts_lb γ (ts : nat) : iProp Σ.
    Admitted.

    Lemma largest_ts_le γ tslb ts :
      is_largest_ts_lb γ tslb -∗
      own_largest_ts γ ts -∗
      ⌜(tslb ≤ ts)%nat⌝.
    Admitted.

    Lemma largest_ts_witness γ ts :
      own_largest_ts γ ts -∗
      is_largest_ts_lb γ ts.
    Admitted.

    Lemma largest_ts_lb_weaken {γ ts} ts' :
      (ts' ≤ ts)%nat ->
      is_largest_ts_lb γ ts -∗
      is_largest_ts_lb γ ts'.
    Admitted.

    #[global]
      Instance is_largest_ts_lb_persistent γ ts :
      Persistent (is_largest_ts_lb γ ts).
    Admitted.

  End largest_ts.

  Section txn_proph.

    (** Prophecy variable predicting a global trace of transaction commands. *)

    Definition own_txn_proph γ (p : proph_id) (acts : list action) : iProp Σ.
    Admitted.

  End txn_proph.

End res.
