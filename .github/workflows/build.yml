name: CI

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]
  schedule:
    # every day at 9am UTC (4am EST).
    - cron: "0 9 * * *"
  # allow running action manually.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        coq_version:
          - dev
          - "8.19"
      max-parallel: 4
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: coq-community/docker-coq-action@v1
        with:
          coq_version: ${{ matrix.coq_version }}
          ocaml_version: "default"
          install: |
            startGroup Install dependencies
              sudo apt-get update
              sudo apt-get install -y python3 python3-pip python3-pandas sqlite3
              pip3 install -r etc/requirements.txt
            endGroup
          # for permissions issue, see: https://github.com/coq-community/docker-coq-action#permissions.
          before_script: |
            sudo chown -R coq:coq .
          script: |
            startGroup Build
              make -j4 -k ci
            endGroup
          after_script: |
            startGroup Create timing report
              ./etc/timing-report.py --max-files 50
            endGroup
          uninstall: |
            make clean
      - name: Revert permissions
        if: ${{ always() }}
        run: sudo chown -R 1001:116 .

  build-vos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        coq_version:
          - dev
      max-parallel: 4
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: coq-community/docker-coq-action@v1
        with:
          coq_version: ${{ matrix.coq_version }}
          ocaml_version: "default"
          install: |
            startGroup Install dependencies
              sudo apt-get update
              sudo apt-get install -y python3 python3-pip python3-pandas sqlite3
              pip3 install -r etc/requirements.txt
            endGroup
          before_script: |
            sudo chown -R coq:coq .
          script: |
            startGroup Build
              make -j4 -k vos
            endGroup
          after_script: |
            startGroup Create timing report
              ./etc/timing-report.py --vos --max-files 50
            endGroup
          uninstall: |
            make clean
      - name: Revert permissions
        if: ${{ always() }}
        run: sudo chown -R 1001:116 .

  check-goose:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          # repo doesn't have go.sum file. nothing to cache.
          cache: false
      - name: check that Goosed files are clean
        run: etc/ci-goose-check.py

  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - name: Format
        run: ruff format --diff ./
      - name: Lint
        run: ruff check ./
