(* autogenerated by namegen; do not modify *)
From New.code Require Import github_com.goose_lang.goose.testdata.examples.append_log.
From New.proof Require Export grove_prelude.
Module append_log.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs `{!GlobalAddrs} : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions append_log.pkg_name' var_addrs append_log.functions' append_log.msets'.

Global Instance wp_func_call_Init : 
  WpFuncCall append_log.pkg_name' "Init" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Open : 
  WpFuncCall append_log.pkg_name' "Open" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_writeAll : 
  WpFuncCall append_log.pkg_name' "writeAll" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_Append : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "Append" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_Get : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "Get" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_Reset : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "Reset" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_append : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "append" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_get : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "get" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_mkHdr : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "mkHdr" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_reset : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "reset" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Log'ptr_writeHdr : 
  WpMethodCall append_log.pkg_name' "Log'ptr" "writeHdr" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End append_log.
