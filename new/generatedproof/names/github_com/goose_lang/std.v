(* autogenerated by namegen; do not modify *)
Require Import New.code.github_com.goose_lang.std.
Require Export New.proof.grove_prelude.
Module std.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{ffi_syntax}Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs `{!GlobalAddrs} : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions std.pkg_name' var_addrs std.functions' std.msets'.

Global Instance wp_func_call_BytesEqual : 
  WpFuncCall std.pkg_name' "BytesEqual" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_BytesClone : 
  WpFuncCall std.pkg_name' "BytesClone" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_SliceSplit : 
  WpFuncCall std.pkg_name' "SliceSplit" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_SumNoOverflow : 
  WpFuncCall std.pkg_name' "SumNoOverflow" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_SumAssumeNoOverflow : 
  WpFuncCall std.pkg_name' "SumAssumeNoOverflow" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_newJoinHandle : 
  WpFuncCall std.pkg_name' "newJoinHandle" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Spawn : 
  WpFuncCall std.pkg_name' "Spawn" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Multipar : 
  WpFuncCall std.pkg_name' "Multipar" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Skip : 
  WpFuncCall std.pkg_name' "Skip" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_JoinHandle'ptr_Join : 
  WpMethodCall std.pkg_name' "JoinHandle'ptr" "Join" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_JoinHandle'ptr_finish : 
  WpMethodCall std.pkg_name' "JoinHandle'ptr" "finish" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End std.
