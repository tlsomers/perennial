(* autogenerated by namegen; do not modify *)
From New.code Require Import github_com.mit_pdos.gokv.asyncfile.
From New.proof Require Export grove_prelude.
Module asyncfile.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs `{!GlobalAddrs} : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions asyncfile.pkg_name' var_addrs asyncfile.functions' asyncfile.msets'.

Global Instance wp_func_call_MakeAsyncFile : 
  WpFuncCall asyncfile.pkg_name' "MakeAsyncFile" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_AsyncFile'ptr_Close : 
  WpMethodCall asyncfile.pkg_name' "AsyncFile'ptr" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_AsyncFile'ptr_Write : 
  WpMethodCall asyncfile.pkg_name' "AsyncFile'ptr" "Write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_AsyncFile'ptr_flushThread : 
  WpMethodCall asyncfile.pkg_name' "AsyncFile'ptr" "flushThread" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_AsyncFile'ptr_wait : 
  WpMethodCall asyncfile.pkg_name' "AsyncFile'ptr" "wait" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End asyncfile.
