(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import context.
From New.golang Require Import theory.

Axiom falso : False.

Module Context.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Context.

Global Instance into_val_Context `{ffi_syntax} : IntoVal Context.t.
Admitted.

Global Instance into_val_typed_Context `{ffi_syntax} : IntoValTyped Context.t context.Context.
Admitted.
Module CancelFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CancelFunc.

Global Instance into_val_CancelFunc `{ffi_syntax} : IntoVal CancelFunc.t.
Admitted.

Global Instance into_val_typed_CancelFunc `{ffi_syntax} : IntoValTyped CancelFunc.t context.CancelFunc.
Admitted.
(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.context.
Require Export New.proof.proof_prelude.
Module context.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions context.pkg_name' var_addrs context.functions' context.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

End defs.
End context.
