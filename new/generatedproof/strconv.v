(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import strconv.
From New.golang Require Import theory.

Axiom falso : False.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.strconv.
Require Export New.proof.proof_prelude.
Module strconv.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions strconv.pkg_name' var_addrs strconv.functions' strconv.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_ParseBool : 
  WpFuncCall strconv.pkg_name' "ParseBool" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_FormatBool : 
  WpFuncCall strconv.pkg_name' "FormatBool" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendBool : 
  WpFuncCall strconv.pkg_name' "AppendBool" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_convErr : 
  WpFuncCall strconv.pkg_name' "convErr" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ParseComplex : 
  WpFuncCall strconv.pkg_name' "ParseComplex" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_commonPrefixLenIgnoreCase : 
  WpFuncCall strconv.pkg_name' "commonPrefixLenIgnoreCase" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_special : 
  WpFuncCall strconv.pkg_name' "special" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_readFloat : 
  WpFuncCall strconv.pkg_name' "readFloat" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atof64exact : 
  WpFuncCall strconv.pkg_name' "atof64exact" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atof32exact : 
  WpFuncCall strconv.pkg_name' "atof32exact" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atofHex : 
  WpFuncCall strconv.pkg_name' "atofHex" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atof32 : 
  WpFuncCall strconv.pkg_name' "atof32" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atof64 : 
  WpFuncCall strconv.pkg_name' "atof64" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ParseFloat : 
  WpFuncCall strconv.pkg_name' "ParseFloat" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_parseFloatPrefix : 
  WpFuncCall strconv.pkg_name' "parseFloatPrefix" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_lower : 
  WpFuncCall strconv.pkg_name' "lower" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_syntaxError : 
  WpFuncCall strconv.pkg_name' "syntaxError" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_rangeError : 
  WpFuncCall strconv.pkg_name' "rangeError" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_baseError : 
  WpFuncCall strconv.pkg_name' "baseError" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_bitSizeError : 
  WpFuncCall strconv.pkg_name' "bitSizeError" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ParseUint : 
  WpFuncCall strconv.pkg_name' "ParseUint" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ParseInt : 
  WpFuncCall strconv.pkg_name' "ParseInt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Atoi : 
  WpFuncCall strconv.pkg_name' "Atoi" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_underscoreOK : 
  WpFuncCall strconv.pkg_name' "underscoreOK" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_index : 
  WpFuncCall strconv.pkg_name' "index" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_FormatComplex : 
  WpFuncCall strconv.pkg_name' "FormatComplex" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_digitZero : 
  WpFuncCall strconv.pkg_name' "digitZero" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_trim : 
  WpFuncCall strconv.pkg_name' "trim" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_rightShift : 
  WpFuncCall strconv.pkg_name' "rightShift" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_prefixIsLessThan : 
  WpFuncCall strconv.pkg_name' "prefixIsLessThan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_leftShift : 
  WpFuncCall strconv.pkg_name' "leftShift" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_shouldRoundUp : 
  WpFuncCall strconv.pkg_name' "shouldRoundUp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_eiselLemire64 : 
  WpFuncCall strconv.pkg_name' "eiselLemire64" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_eiselLemire32 : 
  WpFuncCall strconv.pkg_name' "eiselLemire32" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_FormatFloat : 
  WpFuncCall strconv.pkg_name' "FormatFloat" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendFloat : 
  WpFuncCall strconv.pkg_name' "AppendFloat" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_genericFtoa : 
  WpFuncCall strconv.pkg_name' "genericFtoa" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_bigFtoa : 
  WpFuncCall strconv.pkg_name' "bigFtoa" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_formatDigits : 
  WpFuncCall strconv.pkg_name' "formatDigits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_roundShortest : 
  WpFuncCall strconv.pkg_name' "roundShortest" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_fmtE : 
  WpFuncCall strconv.pkg_name' "fmtE" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_fmtF : 
  WpFuncCall strconv.pkg_name' "fmtF" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_fmtB : 
  WpFuncCall strconv.pkg_name' "fmtB" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_fmtX : 
  WpFuncCall strconv.pkg_name' "fmtX" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ryuFtoaFixed32 : 
  WpFuncCall strconv.pkg_name' "ryuFtoaFixed32" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ryuFtoaFixed64 : 
  WpFuncCall strconv.pkg_name' "ryuFtoaFixed64" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_formatDecimal : 
  WpFuncCall strconv.pkg_name' "formatDecimal" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ryuFtoaShortest : 
  WpFuncCall strconv.pkg_name' "ryuFtoaShortest" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_mulByLog2Log10 : 
  WpFuncCall strconv.pkg_name' "mulByLog2Log10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_mulByLog10Log2 : 
  WpFuncCall strconv.pkg_name' "mulByLog10Log2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_computeBounds : 
  WpFuncCall strconv.pkg_name' "computeBounds" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ryuDigits : 
  WpFuncCall strconv.pkg_name' "ryuDigits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ryuDigits32 : 
  WpFuncCall strconv.pkg_name' "ryuDigits32" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_mult64bitPow10 : 
  WpFuncCall strconv.pkg_name' "mult64bitPow10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_mult128bitPow10 : 
  WpFuncCall strconv.pkg_name' "mult128bitPow10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_divisibleByPower5 : 
  WpFuncCall strconv.pkg_name' "divisibleByPower5" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_divmod1e9 : 
  WpFuncCall strconv.pkg_name' "divmod1e9" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_FormatUint : 
  WpFuncCall strconv.pkg_name' "FormatUint" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_FormatInt : 
  WpFuncCall strconv.pkg_name' "FormatInt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Itoa : 
  WpFuncCall strconv.pkg_name' "Itoa" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendInt : 
  WpFuncCall strconv.pkg_name' "AppendInt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendUint : 
  WpFuncCall strconv.pkg_name' "AppendUint" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_small : 
  WpFuncCall strconv.pkg_name' "small" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_formatBits : 
  WpFuncCall strconv.pkg_name' "formatBits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_isPowerOfTwo : 
  WpFuncCall strconv.pkg_name' "isPowerOfTwo" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_contains : 
  WpFuncCall strconv.pkg_name' "contains" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_quoteWith : 
  WpFuncCall strconv.pkg_name' "quoteWith" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_quoteRuneWith : 
  WpFuncCall strconv.pkg_name' "quoteRuneWith" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_appendQuotedWith : 
  WpFuncCall strconv.pkg_name' "appendQuotedWith" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_appendQuotedRuneWith : 
  WpFuncCall strconv.pkg_name' "appendQuotedRuneWith" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_appendEscapedRune : 
  WpFuncCall strconv.pkg_name' "appendEscapedRune" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Quote : 
  WpFuncCall strconv.pkg_name' "Quote" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendQuote : 
  WpFuncCall strconv.pkg_name' "AppendQuote" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_QuoteToASCII : 
  WpFuncCall strconv.pkg_name' "QuoteToASCII" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendQuoteToASCII : 
  WpFuncCall strconv.pkg_name' "AppendQuoteToASCII" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_QuoteToGraphic : 
  WpFuncCall strconv.pkg_name' "QuoteToGraphic" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendQuoteToGraphic : 
  WpFuncCall strconv.pkg_name' "AppendQuoteToGraphic" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_QuoteRune : 
  WpFuncCall strconv.pkg_name' "QuoteRune" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendQuoteRune : 
  WpFuncCall strconv.pkg_name' "AppendQuoteRune" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_QuoteRuneToASCII : 
  WpFuncCall strconv.pkg_name' "QuoteRuneToASCII" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendQuoteRuneToASCII : 
  WpFuncCall strconv.pkg_name' "AppendQuoteRuneToASCII" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_QuoteRuneToGraphic : 
  WpFuncCall strconv.pkg_name' "QuoteRuneToGraphic" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_AppendQuoteRuneToGraphic : 
  WpFuncCall strconv.pkg_name' "AppendQuoteRuneToGraphic" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_CanBackquote : 
  WpFuncCall strconv.pkg_name' "CanBackquote" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_unhex : 
  WpFuncCall strconv.pkg_name' "unhex" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_UnquoteChar : 
  WpFuncCall strconv.pkg_name' "UnquoteChar" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_QuotedPrefix : 
  WpFuncCall strconv.pkg_name' "QuotedPrefix" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Unquote : 
  WpFuncCall strconv.pkg_name' "Unquote" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_unquote : 
  WpFuncCall strconv.pkg_name' "unquote" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_bsearch : 
  WpFuncCall strconv.pkg_name' "bsearch" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_IsPrint : 
  WpFuncCall strconv.pkg_name' "IsPrint" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_IsGraphic : 
  WpFuncCall strconv.pkg_name' "IsGraphic" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_isInGraphicList : 
  WpFuncCall strconv.pkg_name' "isInGraphicList" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_NumError'ptr_Error : 
  WpMethodCall strconv.pkg_name' "NumError'ptr" "Error" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_NumError'ptr_Unwrap : 
  WpMethodCall strconv.pkg_name' "NumError'ptr" "Unwrap" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_Assign : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "Assign" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_Round : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "Round" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_RoundDown : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "RoundDown" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_RoundUp : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "RoundUp" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_RoundedInteger : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "RoundedInteger" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_Shift : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "Shift" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_String : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "String" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_floatBits : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "floatBits" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_decimal'ptr_set : 
  WpMethodCall strconv.pkg_name' "decimal'ptr" "set" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End strconv.
