(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import crypto.rand.
From New.golang Require Import theory.

Axiom falso : False.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.crypto.rand.
Require Export New.proof.proof_prelude.
Module rand.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions rand.pkg_name' var_addrs rand.functions' rand.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_Read : 
  WpFuncCall rand.pkg_name' "Read" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_batched : 
  WpFuncCall rand.pkg_name' "batched" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_getRandom : 
  WpFuncCall rand.pkg_name' "getRandom" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_warnBlocked : 
  WpFuncCall rand.pkg_name' "warnBlocked" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Prime : 
  WpFuncCall rand.pkg_name' "Prime" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Int : 
  WpFuncCall rand.pkg_name' "Int" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_reader'ptr_Read : 
  WpMethodCall rand.pkg_name' "reader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_hideAgainReader_Read : 
  WpMethodCall rand.pkg_name' "hideAgainReader" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_hideAgainReader'ptr_Read : 
  WpMethodCall rand.pkg_name' "hideAgainReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End rand.
