(* autogenerated by goose proofgen (types); do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.manualproof.sync.
Require Export New.code.sync.
Require Export New.golang.theory.

Module sync.
Axiom falso : False.

Section names.

Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions sync.pkg_name' var_addrs sync.functions' sync.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_NewCond :
  WpFuncCall sync.pkg_name' "NewCond" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Cond'ptr_Broadcast : 
  WpMethodCall sync.pkg_name' "Cond'ptr" "Broadcast" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Cond'ptr_Signal : 
  WpMethodCall sync.pkg_name' "Cond'ptr" "Signal" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Cond'ptr_Wait : 
  WpMethodCall sync.pkg_name' "Cond'ptr" "Wait" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_Lock : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_Unlock : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End names.
End sync.
