(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import sync.
From New.golang Require Import theory.

Axiom falso : False.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.sync.
Require Export New.proof.proof_prelude.
Module sync.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions sync.pkg_name' var_addrs sync.functions' sync.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_NewCond : 
  WpFuncCall sync.pkg_name' "NewCond" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_newEntry : 
  WpFuncCall sync.pkg_name' "newEntry" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_throw : 
  WpFuncCall sync.pkg_name' "throw" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_fatal : 
  WpFuncCall sync.pkg_name' "fatal" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_OnceFunc : 
  WpFuncCall sync.pkg_name' "OnceFunc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_OnceValue : 
  WpFuncCall sync.pkg_name' "OnceValue" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_OnceValues : 
  WpFuncCall sync.pkg_name' "OnceValues" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_randn : 
  WpFuncCall sync.pkg_name' "runtime_randn" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_poolRaceAddr : 
  WpFuncCall sync.pkg_name' "poolRaceAddr" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_poolCleanup : 
  WpFuncCall sync.pkg_name' "poolCleanup" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_indexLocal : 
  WpFuncCall sync.pkg_name' "indexLocal" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_registerPoolCleanup : 
  WpFuncCall sync.pkg_name' "runtime_registerPoolCleanup" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_procPin : 
  WpFuncCall sync.pkg_name' "runtime_procPin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_procUnpin : 
  WpFuncCall sync.pkg_name' "runtime_procUnpin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_LoadAcquintptr : 
  WpFuncCall sync.pkg_name' "runtime_LoadAcquintptr" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_StoreReluintptr : 
  WpFuncCall sync.pkg_name' "runtime_StoreReluintptr" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_Semacquire : 
  WpFuncCall sync.pkg_name' "runtime_Semacquire" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_SemacquireMutex : 
  WpFuncCall sync.pkg_name' "runtime_SemacquireMutex" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_SemacquireRWMutexR : 
  WpFuncCall sync.pkg_name' "runtime_SemacquireRWMutexR" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_SemacquireRWMutex : 
  WpFuncCall sync.pkg_name' "runtime_SemacquireRWMutex" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_Semrelease : 
  WpFuncCall sync.pkg_name' "runtime_Semrelease" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_notifyListAdd : 
  WpFuncCall sync.pkg_name' "runtime_notifyListAdd" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_notifyListWait : 
  WpFuncCall sync.pkg_name' "runtime_notifyListWait" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_notifyListNotifyAll : 
  WpFuncCall sync.pkg_name' "runtime_notifyListNotifyAll" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_notifyListNotifyOne : 
  WpFuncCall sync.pkg_name' "runtime_notifyListNotifyOne" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_notifyListCheck : 
  WpFuncCall sync.pkg_name' "runtime_notifyListCheck" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_canSpin : 
  WpFuncCall sync.pkg_name' "runtime_canSpin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_doSpin : 
  WpFuncCall sync.pkg_name' "runtime_doSpin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_runtime_nanotime : 
  WpFuncCall sync.pkg_name' "runtime_nanotime" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_syscall_hasWaitingReaders : 
  WpFuncCall sync.pkg_name' "syscall_hasWaitingReaders" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Cond'ptr_Broadcast : 
  WpMethodCall sync.pkg_name' "Cond'ptr" "Broadcast" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Cond'ptr_Signal : 
  WpMethodCall sync.pkg_name' "Cond'ptr" "Signal" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Cond'ptr_Wait : 
  WpMethodCall sync.pkg_name' "Cond'ptr" "Wait" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_copyChecker'ptr_check : 
  WpMethodCall sync.pkg_name' "copyChecker'ptr" "check" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_noCopy'ptr_Lock : 
  WpMethodCall sync.pkg_name' "noCopy'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_noCopy'ptr_Unlock : 
  WpMethodCall sync.pkg_name' "noCopy'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_Clear : 
  WpMethodCall sync.pkg_name' "Map'ptr" "Clear" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_CompareAndDelete : 
  WpMethodCall sync.pkg_name' "Map'ptr" "CompareAndDelete" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_CompareAndSwap : 
  WpMethodCall sync.pkg_name' "Map'ptr" "CompareAndSwap" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_Delete : 
  WpMethodCall sync.pkg_name' "Map'ptr" "Delete" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_Load : 
  WpMethodCall sync.pkg_name' "Map'ptr" "Load" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_LoadAndDelete : 
  WpMethodCall sync.pkg_name' "Map'ptr" "LoadAndDelete" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_LoadOrStore : 
  WpMethodCall sync.pkg_name' "Map'ptr" "LoadOrStore" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_Range : 
  WpMethodCall sync.pkg_name' "Map'ptr" "Range" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_Store : 
  WpMethodCall sync.pkg_name' "Map'ptr" "Store" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_Swap : 
  WpMethodCall sync.pkg_name' "Map'ptr" "Swap" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_dirtyLocked : 
  WpMethodCall sync.pkg_name' "Map'ptr" "dirtyLocked" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_loadReadOnly : 
  WpMethodCall sync.pkg_name' "Map'ptr" "loadReadOnly" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Map'ptr_missLocked : 
  WpMethodCall sync.pkg_name' "Map'ptr" "missLocked" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_delete : 
  WpMethodCall sync.pkg_name' "entry'ptr" "delete" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_load : 
  WpMethodCall sync.pkg_name' "entry'ptr" "load" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_swapLocked : 
  WpMethodCall sync.pkg_name' "entry'ptr" "swapLocked" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_tryCompareAndSwap : 
  WpMethodCall sync.pkg_name' "entry'ptr" "tryCompareAndSwap" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_tryExpungeLocked : 
  WpMethodCall sync.pkg_name' "entry'ptr" "tryExpungeLocked" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_tryLoadOrStore : 
  WpMethodCall sync.pkg_name' "entry'ptr" "tryLoadOrStore" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_trySwap : 
  WpMethodCall sync.pkg_name' "entry'ptr" "trySwap" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_entry'ptr_unexpungeLocked : 
  WpMethodCall sync.pkg_name' "entry'ptr" "unexpungeLocked" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_Lock : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_TryLock : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "TryLock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_Unlock : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_lockSlow : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "lockSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Mutex'ptr_unlockSlow : 
  WpMethodCall sync.pkg_name' "Mutex'ptr" "unlockSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Once'ptr_Do : 
  WpMethodCall sync.pkg_name' "Once'ptr" "Do" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Once'ptr_doSlow : 
  WpMethodCall sync.pkg_name' "Once'ptr" "doSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Pool'ptr_Get : 
  WpMethodCall sync.pkg_name' "Pool'ptr" "Get" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Pool'ptr_Put : 
  WpMethodCall sync.pkg_name' "Pool'ptr" "Put" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Pool'ptr_getSlow : 
  WpMethodCall sync.pkg_name' "Pool'ptr" "getSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Pool'ptr_pin : 
  WpMethodCall sync.pkg_name' "Pool'ptr" "pin" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Pool'ptr_pinSlow : 
  WpMethodCall sync.pkg_name' "Pool'ptr" "pinSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolDequeue'ptr_pack : 
  WpMethodCall sync.pkg_name' "poolDequeue'ptr" "pack" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolDequeue'ptr_popHead : 
  WpMethodCall sync.pkg_name' "poolDequeue'ptr" "popHead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolDequeue'ptr_popTail : 
  WpMethodCall sync.pkg_name' "poolDequeue'ptr" "popTail" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolDequeue'ptr_pushHead : 
  WpMethodCall sync.pkg_name' "poolDequeue'ptr" "pushHead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolDequeue'ptr_unpack : 
  WpMethodCall sync.pkg_name' "poolDequeue'ptr" "unpack" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChain'ptr_popHead : 
  WpMethodCall sync.pkg_name' "poolChain'ptr" "popHead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChain'ptr_popTail : 
  WpMethodCall sync.pkg_name' "poolChain'ptr" "popTail" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChain'ptr_pushHead : 
  WpMethodCall sync.pkg_name' "poolChain'ptr" "pushHead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChainElt'ptr_pack : 
  WpMethodCall sync.pkg_name' "poolChainElt'ptr" "pack" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChainElt'ptr_popHead : 
  WpMethodCall sync.pkg_name' "poolChainElt'ptr" "popHead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChainElt'ptr_popTail : 
  WpMethodCall sync.pkg_name' "poolChainElt'ptr" "popTail" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChainElt'ptr_pushHead : 
  WpMethodCall sync.pkg_name' "poolChainElt'ptr" "pushHead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_poolChainElt'ptr_unpack : 
  WpMethodCall sync.pkg_name' "poolChainElt'ptr" "unpack" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_Lock : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_RLock : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "RLock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_RLocker : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "RLocker" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_RUnlock : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "RUnlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_TryLock : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "TryLock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_TryRLock : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "TryRLock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_Unlock : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RWMutex'ptr_rUnlockSlow : 
  WpMethodCall sync.pkg_name' "RWMutex'ptr" "rUnlockSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_rlocker'ptr_Lock : 
  WpMethodCall sync.pkg_name' "rlocker'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_rlocker'ptr_Unlock : 
  WpMethodCall sync.pkg_name' "rlocker'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_WaitGroup'ptr_Add : 
  WpMethodCall sync.pkg_name' "WaitGroup'ptr" "Add" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_WaitGroup'ptr_Done : 
  WpMethodCall sync.pkg_name' "WaitGroup'ptr" "Done" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_WaitGroup'ptr_Wait : 
  WpMethodCall sync.pkg_name' "WaitGroup'ptr" "Wait" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End sync.
