(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import go_etcd_io.raft.v3.confchange.
From New.golang Require Import theory.

Axiom falso : False.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.go_etcd_io.raft.v3.confchange.
Require Export New.proof.proof_prelude.
Module confchange.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions confchange.pkg_name' var_addrs confchange.functions' confchange.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_checkInvariants : 
  WpFuncCall confchange.pkg_name' "checkInvariants" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_checkAndReturn : 
  WpFuncCall confchange.pkg_name' "checkAndReturn" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_nilAwareAdd : 
  WpFuncCall confchange.pkg_name' "nilAwareAdd" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_nilAwareDelete : 
  WpFuncCall confchange.pkg_name' "nilAwareDelete" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_symdiff : 
  WpFuncCall confchange.pkg_name' "symdiff" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_joint : 
  WpFuncCall confchange.pkg_name' "joint" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_incoming : 
  WpFuncCall confchange.pkg_name' "incoming" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_outgoing : 
  WpFuncCall confchange.pkg_name' "outgoing" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_outgoingPtr : 
  WpFuncCall confchange.pkg_name' "outgoingPtr" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Describe : 
  WpFuncCall confchange.pkg_name' "Describe" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_toConfChangeSingle : 
  WpFuncCall confchange.pkg_name' "toConfChangeSingle" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_chain : 
  WpFuncCall confchange.pkg_name' "chain" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Restore : 
  WpFuncCall confchange.pkg_name' "Restore" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Changer_EnterJoint : 
  WpMethodCall confchange.pkg_name' "Changer" "EnterJoint" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_LeaveJoint : 
  WpMethodCall confchange.pkg_name' "Changer" "LeaveJoint" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_Simple : 
  WpMethodCall confchange.pkg_name' "Changer" "Simple" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_apply : 
  WpMethodCall confchange.pkg_name' "Changer" "apply" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_checkAndCopy : 
  WpMethodCall confchange.pkg_name' "Changer" "checkAndCopy" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_err : 
  WpMethodCall confchange.pkg_name' "Changer" "err" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_initProgress : 
  WpMethodCall confchange.pkg_name' "Changer" "initProgress" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_makeLearner : 
  WpMethodCall confchange.pkg_name' "Changer" "makeLearner" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_makeVoter : 
  WpMethodCall confchange.pkg_name' "Changer" "makeVoter" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer_remove : 
  WpMethodCall confchange.pkg_name' "Changer" "remove" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_EnterJoint : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "EnterJoint" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_LeaveJoint : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "LeaveJoint" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_Simple : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "Simple" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_apply : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "apply" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_checkAndCopy : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "checkAndCopy" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_err : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "err" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_initProgress : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "initProgress" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_makeLearner : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "makeLearner" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_makeVoter : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "makeVoter" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Changer'ptr_remove : 
  WpMethodCall confchange.pkg_name' "Changer'ptr" "remove" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End confchange.
