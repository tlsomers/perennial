(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import math.
From New.golang Require Import theory.

Axiom falso : False.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.math.
Require Export New.proof.proof_prelude.
Module math.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions math.pkg_name' var_addrs math.functions' math.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_Abs : 
  WpFuncCall math.pkg_name' "Abs" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Acosh : 
  WpFuncCall math.pkg_name' "Acosh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_acosh : 
  WpFuncCall math.pkg_name' "acosh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Asin : 
  WpFuncCall math.pkg_name' "Asin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_asin : 
  WpFuncCall math.pkg_name' "asin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Acos : 
  WpFuncCall math.pkg_name' "Acos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_acos : 
  WpFuncCall math.pkg_name' "acos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Asinh : 
  WpFuncCall math.pkg_name' "Asinh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_asinh : 
  WpFuncCall math.pkg_name' "asinh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_xatan : 
  WpFuncCall math.pkg_name' "xatan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_satan : 
  WpFuncCall math.pkg_name' "satan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Atan : 
  WpFuncCall math.pkg_name' "Atan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atan : 
  WpFuncCall math.pkg_name' "atan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Atan2 : 
  WpFuncCall math.pkg_name' "Atan2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atan2 : 
  WpFuncCall math.pkg_name' "atan2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Atanh : 
  WpFuncCall math.pkg_name' "Atanh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_atanh : 
  WpFuncCall math.pkg_name' "atanh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Inf : 
  WpFuncCall math.pkg_name' "Inf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_NaN : 
  WpFuncCall math.pkg_name' "NaN" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_IsNaN : 
  WpFuncCall math.pkg_name' "IsNaN" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_IsInf : 
  WpFuncCall math.pkg_name' "IsInf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_normalize : 
  WpFuncCall math.pkg_name' "normalize" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Cbrt : 
  WpFuncCall math.pkg_name' "Cbrt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_cbrt : 
  WpFuncCall math.pkg_name' "cbrt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Copysign : 
  WpFuncCall math.pkg_name' "Copysign" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Dim : 
  WpFuncCall math.pkg_name' "Dim" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Max : 
  WpFuncCall math.pkg_name' "Max" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_max : 
  WpFuncCall math.pkg_name' "max" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Min : 
  WpFuncCall math.pkg_name' "Min" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_min : 
  WpFuncCall math.pkg_name' "min" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archMax : 
  WpFuncCall math.pkg_name' "archMax" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archMin : 
  WpFuncCall math.pkg_name' "archMin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Erf : 
  WpFuncCall math.pkg_name' "Erf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_erf : 
  WpFuncCall math.pkg_name' "erf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Erfc : 
  WpFuncCall math.pkg_name' "Erfc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_erfc : 
  WpFuncCall math.pkg_name' "erfc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Erfinv : 
  WpFuncCall math.pkg_name' "Erfinv" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Erfcinv : 
  WpFuncCall math.pkg_name' "Erfcinv" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Exp : 
  WpFuncCall math.pkg_name' "Exp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_exp : 
  WpFuncCall math.pkg_name' "exp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Exp2 : 
  WpFuncCall math.pkg_name' "Exp2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_exp2 : 
  WpFuncCall math.pkg_name' "exp2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_expmulti : 
  WpFuncCall math.pkg_name' "expmulti" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archExp2 : 
  WpFuncCall math.pkg_name' "archExp2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archExp : 
  WpFuncCall math.pkg_name' "archExp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Expm1 : 
  WpFuncCall math.pkg_name' "Expm1" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_expm1 : 
  WpFuncCall math.pkg_name' "expm1" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Floor : 
  WpFuncCall math.pkg_name' "Floor" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_floor : 
  WpFuncCall math.pkg_name' "floor" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Ceil : 
  WpFuncCall math.pkg_name' "Ceil" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ceil : 
  WpFuncCall math.pkg_name' "ceil" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Trunc : 
  WpFuncCall math.pkg_name' "Trunc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_trunc : 
  WpFuncCall math.pkg_name' "trunc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Round : 
  WpFuncCall math.pkg_name' "Round" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_RoundToEven : 
  WpFuncCall math.pkg_name' "RoundToEven" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archFloor : 
  WpFuncCall math.pkg_name' "archFloor" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archCeil : 
  WpFuncCall math.pkg_name' "archCeil" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archTrunc : 
  WpFuncCall math.pkg_name' "archTrunc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_zero : 
  WpFuncCall math.pkg_name' "zero" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_nonzero : 
  WpFuncCall math.pkg_name' "nonzero" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_shl : 
  WpFuncCall math.pkg_name' "shl" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_shr : 
  WpFuncCall math.pkg_name' "shr" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_shrcompress : 
  WpFuncCall math.pkg_name' "shrcompress" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_lz : 
  WpFuncCall math.pkg_name' "lz" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_split : 
  WpFuncCall math.pkg_name' "split" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_FMA : 
  WpFuncCall math.pkg_name' "FMA" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Frexp : 
  WpFuncCall math.pkg_name' "Frexp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_frexp : 
  WpFuncCall math.pkg_name' "frexp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_stirling : 
  WpFuncCall math.pkg_name' "stirling" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Gamma : 
  WpFuncCall math.pkg_name' "Gamma" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_isNegInt : 
  WpFuncCall math.pkg_name' "isNegInt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Hypot : 
  WpFuncCall math.pkg_name' "Hypot" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_hypot : 
  WpFuncCall math.pkg_name' "hypot" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archHypot : 
  WpFuncCall math.pkg_name' "archHypot" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_J0 : 
  WpFuncCall math.pkg_name' "J0" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Y0 : 
  WpFuncCall math.pkg_name' "Y0" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_pzero : 
  WpFuncCall math.pkg_name' "pzero" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_qzero : 
  WpFuncCall math.pkg_name' "qzero" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_J1 : 
  WpFuncCall math.pkg_name' "J1" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Y1 : 
  WpFuncCall math.pkg_name' "Y1" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_pone : 
  WpFuncCall math.pkg_name' "pone" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_qone : 
  WpFuncCall math.pkg_name' "qone" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Jn : 
  WpFuncCall math.pkg_name' "Jn" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Yn : 
  WpFuncCall math.pkg_name' "Yn" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Ldexp : 
  WpFuncCall math.pkg_name' "Ldexp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ldexp : 
  WpFuncCall math.pkg_name' "ldexp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Lgamma : 
  WpFuncCall math.pkg_name' "Lgamma" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_sinPi : 
  WpFuncCall math.pkg_name' "sinPi" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Log : 
  WpFuncCall math.pkg_name' "Log" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_log : 
  WpFuncCall math.pkg_name' "log" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Log10 : 
  WpFuncCall math.pkg_name' "Log10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_log10 : 
  WpFuncCall math.pkg_name' "log10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Log2 : 
  WpFuncCall math.pkg_name' "Log2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_log2 : 
  WpFuncCall math.pkg_name' "log2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Log1p : 
  WpFuncCall math.pkg_name' "Log1p" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_log1p : 
  WpFuncCall math.pkg_name' "log1p" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archLog : 
  WpFuncCall math.pkg_name' "archLog" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Logb : 
  WpFuncCall math.pkg_name' "Logb" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Ilogb : 
  WpFuncCall math.pkg_name' "Ilogb" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ilogb : 
  WpFuncCall math.pkg_name' "ilogb" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Mod : 
  WpFuncCall math.pkg_name' "Mod" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_mod : 
  WpFuncCall math.pkg_name' "mod" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Modf : 
  WpFuncCall math.pkg_name' "Modf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_modf : 
  WpFuncCall math.pkg_name' "modf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archModf : 
  WpFuncCall math.pkg_name' "archModf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Nextafter32 : 
  WpFuncCall math.pkg_name' "Nextafter32" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Nextafter : 
  WpFuncCall math.pkg_name' "Nextafter" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_isOddInt : 
  WpFuncCall math.pkg_name' "isOddInt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Pow : 
  WpFuncCall math.pkg_name' "Pow" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_pow : 
  WpFuncCall math.pkg_name' "pow" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Pow10 : 
  WpFuncCall math.pkg_name' "Pow10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Remainder : 
  WpFuncCall math.pkg_name' "Remainder" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_remainder : 
  WpFuncCall math.pkg_name' "remainder" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Signbit : 
  WpFuncCall math.pkg_name' "Signbit" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Cos : 
  WpFuncCall math.pkg_name' "Cos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_cos : 
  WpFuncCall math.pkg_name' "cos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Sin : 
  WpFuncCall math.pkg_name' "Sin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_sin : 
  WpFuncCall math.pkg_name' "sin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Sincos : 
  WpFuncCall math.pkg_name' "Sincos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Sinh : 
  WpFuncCall math.pkg_name' "Sinh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_sinh : 
  WpFuncCall math.pkg_name' "sinh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Cosh : 
  WpFuncCall math.pkg_name' "Cosh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_cosh : 
  WpFuncCall math.pkg_name' "cosh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Sqrt : 
  WpFuncCall math.pkg_name' "Sqrt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_sqrt : 
  WpFuncCall math.pkg_name' "sqrt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAcos : 
  WpFuncCall math.pkg_name' "archAcos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAcosh : 
  WpFuncCall math.pkg_name' "archAcosh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAsin : 
  WpFuncCall math.pkg_name' "archAsin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAsinh : 
  WpFuncCall math.pkg_name' "archAsinh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAtan : 
  WpFuncCall math.pkg_name' "archAtan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAtan2 : 
  WpFuncCall math.pkg_name' "archAtan2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archAtanh : 
  WpFuncCall math.pkg_name' "archAtanh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archCbrt : 
  WpFuncCall math.pkg_name' "archCbrt" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archCos : 
  WpFuncCall math.pkg_name' "archCos" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archCosh : 
  WpFuncCall math.pkg_name' "archCosh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archErf : 
  WpFuncCall math.pkg_name' "archErf" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archErfc : 
  WpFuncCall math.pkg_name' "archErfc" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archExpm1 : 
  WpFuncCall math.pkg_name' "archExpm1" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archFrexp : 
  WpFuncCall math.pkg_name' "archFrexp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archLdexp : 
  WpFuncCall math.pkg_name' "archLdexp" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archLog10 : 
  WpFuncCall math.pkg_name' "archLog10" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archLog2 : 
  WpFuncCall math.pkg_name' "archLog2" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archLog1p : 
  WpFuncCall math.pkg_name' "archLog1p" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archMod : 
  WpFuncCall math.pkg_name' "archMod" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archPow : 
  WpFuncCall math.pkg_name' "archPow" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archRemainder : 
  WpFuncCall math.pkg_name' "archRemainder" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archSin : 
  WpFuncCall math.pkg_name' "archSin" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archSinh : 
  WpFuncCall math.pkg_name' "archSinh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archTan : 
  WpFuncCall math.pkg_name' "archTan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_archTanh : 
  WpFuncCall math.pkg_name' "archTanh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Tan : 
  WpFuncCall math.pkg_name' "Tan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_tan : 
  WpFuncCall math.pkg_name' "tan" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Tanh : 
  WpFuncCall math.pkg_name' "Tanh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_tanh : 
  WpFuncCall math.pkg_name' "tanh" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_trigReduce : 
  WpFuncCall math.pkg_name' "trigReduce" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Float32bits : 
  WpFuncCall math.pkg_name' "Float32bits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Float32frombits : 
  WpFuncCall math.pkg_name' "Float32frombits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Float64bits : 
  WpFuncCall math.pkg_name' "Float64bits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Float64frombits : 
  WpFuncCall math.pkg_name' "Float64frombits" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

End defs.
End math.
