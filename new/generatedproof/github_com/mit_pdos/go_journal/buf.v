(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.disk_prelude.
Require Export New.generatedproof.github_com.goose_lang.primitive.disk.
Require Export New.generatedproof.github_com.tchajed.marshal.
Require Export New.generatedproof.github_com.mit_pdos.go_journal.addr.
Require Export New.generatedproof.github_com.mit_pdos.go_journal.common.
Require Export New.generatedproof.github_com.mit_pdos.go_journal.util.
Require Export New.golang.theory.

Require Export New.code.github_com.mit_pdos.go_journal.buf.
Module buf.
Axiom falso : False.
Module Buf.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Addr' : addr.Addr.t;
  Sz' : w64;
  Data' : slice.t;
  dirty' : bool;
}.
End def.
End Buf.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Buf `{ffi_syntax}: Settable _ :=
  settable! Buf.mk < Buf.Addr'; Buf.Sz'; Buf.Data'; Buf.dirty' >.
Global Instance into_val_Buf `{ffi_syntax} : IntoVal Buf.t.
Admitted.

Global Instance into_val_typed_Buf `{ffi_syntax} : IntoValTyped Buf.t buf.Buf :=
{|
  default_val := Buf.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Buf_Addr `{ffi_syntax} : IntoValStructField "Addr" buf.Buf Buf.Addr'.
Admitted.

Global Instance into_val_struct_field_Buf_Sz `{ffi_syntax} : IntoValStructField "Sz" buf.Buf Buf.Sz'.
Admitted.

Global Instance into_val_struct_field_Buf_Data `{ffi_syntax} : IntoValStructField "Data" buf.Buf Buf.Data'.
Admitted.

Global Instance into_val_struct_field_Buf_dirty `{ffi_syntax} : IntoValStructField "dirty" buf.Buf Buf.dirty'.
Admitted.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Buf `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Addr' Sz' Data' dirty':
  PureWp True
    (struct.make #buf.Buf (alist_val [
      "Addr" ::= #Addr';
      "Sz" ::= #Sz';
      "Data" ::= #Data';
      "dirty" ::= #dirty'
    ]))%struct
    #(Buf.mk Addr' Sz' Data' dirty').
Admitted.


Global Instance Buf_struct_fields_split dq l (v : Buf.t) :
  StructFieldsSplit dq l v (
    "HAddr" ∷ l ↦s[buf.Buf :: "Addr"]{dq} v.(Buf.Addr') ∗
    "HSz" ∷ l ↦s[buf.Buf :: "Sz"]{dq} v.(Buf.Sz') ∗
    "HData" ∷ l ↦s[buf.Buf :: "Data"]{dq} v.(Buf.Data') ∗
    "Hdirty" ∷ l ↦s[buf.Buf :: "dirty"]{dq} v.(Buf.dirty')
  ).
Admitted.

End instances.
Module BufMap.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  addrs' : loc;
}.
End def.
End BufMap.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_BufMap `{ffi_syntax}: Settable _ :=
  settable! BufMap.mk < BufMap.addrs' >.
Global Instance into_val_BufMap `{ffi_syntax} : IntoVal BufMap.t.
Admitted.

Global Instance into_val_typed_BufMap `{ffi_syntax} : IntoValTyped BufMap.t buf.BufMap :=
{|
  default_val := BufMap.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_BufMap_addrs `{ffi_syntax} : IntoValStructField "addrs" buf.BufMap BufMap.addrs'.
Admitted.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_BufMap `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} addrs':
  PureWp True
    (struct.make #buf.BufMap (alist_val [
      "addrs" ::= #addrs'
    ]))%struct
    #(BufMap.mk addrs').
Admitted.


Global Instance BufMap_struct_fields_split dq l (v : BufMap.t) :
  StructFieldsSplit dq l v (
    "Haddrs" ∷ l ↦s[buf.BufMap :: "addrs"]{dq} v.(BufMap.addrs')
  ).
Admitted.

End instances.

Section names.

Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Global Instance is_pkg_defined_instance : IsPkgDefined buf :=
{|
  is_pkg_defined := is_global_definitions buf var_addrs;
|}.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_MkBuf :
  WpFuncCall buf "MkBuf" _ (is_pkg_defined buf) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_MkBufLoad :
  WpFuncCall buf "MkBufLoad" _ (is_pkg_defined buf) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_installOneBit :
  WpFuncCall buf "installOneBit" _ (is_pkg_defined buf) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_installBit :
  WpFuncCall buf "installBit" _ (is_pkg_defined buf) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_installBytes :
  WpFuncCall buf "installBytes" _ (is_pkg_defined buf) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_MkBufMap :
  WpFuncCall buf "MkBufMap" _ (is_pkg_defined buf) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Buf'ptr_BnumGet :
  WpMethodCall buf "Buf'ptr" "BnumGet" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Buf'ptr_BnumPut :
  WpMethodCall buf "Buf'ptr" "BnumPut" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Buf'ptr_Install :
  WpMethodCall buf "Buf'ptr" "Install" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Buf'ptr_IsDirty :
  WpMethodCall buf "Buf'ptr" "IsDirty" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Buf'ptr_SetDirty :
  WpMethodCall buf "Buf'ptr" "SetDirty" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Buf'ptr_WriteDirect :
  WpMethodCall buf "Buf'ptr" "WriteDirect" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_BufMap'ptr_Del :
  WpMethodCall buf "BufMap'ptr" "Del" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_BufMap'ptr_DirtyBufs :
  WpMethodCall buf "BufMap'ptr" "DirtyBufs" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_BufMap'ptr_Insert :
  WpMethodCall buf "BufMap'ptr" "Insert" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_BufMap'ptr_Lookup :
  WpMethodCall buf "BufMap'ptr" "Lookup" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_BufMap'ptr_Ndirty :
  WpMethodCall buf "BufMap'ptr" "Ndirty" _ (is_pkg_defined buf) :=
  ltac:(apply wp_method_call'; reflexivity).

End names.
End buf.
