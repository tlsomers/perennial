(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import github_com.mit_pdos.gokv.lockservice.
From New.golang Require Import theory.

Axiom falso : False.

Module LockClerk.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  kv' : interface.t;
}.
End def.
End LockClerk.


Global Instance settable_LockClerk `{ffi_syntax}: Settable _ :=
  settable! LockClerk.mk < LockClerk.kv' >.
Global Instance into_val_LockClerk `{ffi_syntax} : IntoVal LockClerk.t.
Admitted.

Global Instance into_val_typed_LockClerk `{ffi_syntax} : IntoValTyped LockClerk.t lockservice.LockClerk :=
{|
  default_val := LockClerk.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_LockClerk_kv `{ffi_syntax} : IntoValStructField "kv" lockservice.LockClerk LockClerk.kv'.
Admitted.

Instance wp_struct_make_LockClerk `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} kv':
  PureWp True
    (struct.make lockservice.LockClerk (alist_val [
      "kv" ::= #kv'
    ]))%V
    #(LockClerk.mk kv').
Admitted.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.github_com.mit_pdos.gokv.lockservice.
Require Export New.proof.proof_prelude.
Module lockservice.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions lockservice.pkg_name' var_addrs lockservice.functions' lockservice.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_MakeLockClerk : 
  WpFuncCall lockservice.pkg_name' "MakeLockClerk" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_LockClerk'ptr_Lock : 
  WpMethodCall lockservice.pkg_name' "LockClerk'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_LockClerk'ptr_Unlock : 
  WpMethodCall lockservice.pkg_name' "LockClerk'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End lockservice.
