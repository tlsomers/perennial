(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import github_com.mit_pdos.gokv.reconnectclient.
From New.golang Require Import theory.

Require New.generatedproof.sync.
Require New.generatedproof.github_com.goose_lang.primitive.
Require New.generatedproof.github_com.mit_pdos.gokv.grove_ffi.
Require New.generatedproof.github_com.mit_pdos.gokv.urpc.
Axiom falso : False.

Module ReconnectingClient.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  mu' : loc;
  valid' : bool;
  urpcCl' : loc;
  addr' : w64;
}.
End def.
End ReconnectingClient.


Global Instance settable_ReconnectingClient `{ffi_syntax}: Settable _ :=
  settable! ReconnectingClient.mk < ReconnectingClient.mu'; ReconnectingClient.valid'; ReconnectingClient.urpcCl'; ReconnectingClient.addr' >.
Global Instance into_val_ReconnectingClient `{ffi_syntax} : IntoVal ReconnectingClient.t.
Admitted.

Global Instance into_val_typed_ReconnectingClient `{ffi_syntax} : IntoValTyped ReconnectingClient.t reconnectclient.ReconnectingClient :=
{|
  default_val := ReconnectingClient.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_ReconnectingClient_mu `{ffi_syntax} : IntoValStructField "mu" reconnectclient.ReconnectingClient ReconnectingClient.mu'.
Admitted.

Global Instance into_val_struct_field_ReconnectingClient_valid `{ffi_syntax} : IntoValStructField "valid" reconnectclient.ReconnectingClient ReconnectingClient.valid'.
Admitted.

Global Instance into_val_struct_field_ReconnectingClient_urpcCl `{ffi_syntax} : IntoValStructField "urpcCl" reconnectclient.ReconnectingClient ReconnectingClient.urpcCl'.
Admitted.

Global Instance into_val_struct_field_ReconnectingClient_addr `{ffi_syntax} : IntoValStructField "addr" reconnectclient.ReconnectingClient ReconnectingClient.addr'.
Admitted.

Instance wp_struct_make_ReconnectingClient `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} mu' valid' urpcCl' addr':
  PureWp True
    (struct.make reconnectclient.ReconnectingClient (alist_val [
      "mu" ::= #mu';
      "valid" ::= #valid';
      "urpcCl" ::= #urpcCl';
      "addr" ::= #addr'
    ]))%V
    #(ReconnectingClient.mk mu' valid' urpcCl' addr').
Admitted.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.github_com.mit_pdos.gokv.reconnectclient.
Require Export New.proof.grove_prelude.
Module reconnectclient.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions reconnectclient.pkg_name' var_addrs reconnectclient.functions' reconnectclient.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_MakeReconnectingClient : 
  WpFuncCall reconnectclient.pkg_name' "MakeReconnectingClient" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_ReconnectingClient'ptr_Call : 
  WpMethodCall reconnectclient.pkg_name' "ReconnectingClient'ptr" "Call" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ReconnectingClient'ptr_getClient : 
  WpMethodCall reconnectclient.pkg_name' "ReconnectingClient'ptr" "getClient" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End reconnectclient.
