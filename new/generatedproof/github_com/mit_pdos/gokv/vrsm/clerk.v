(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.grove_prelude.
Require Export New.generatedproof.github_com.goose_lang.primitive.
Require Export New.generatedproof.github_com.mit_pdos.gokv.grove_ffi.
Require Export New.generatedproof.github_com.mit_pdos.gokv.trusted_proph.
Require Export New.generatedproof.github_com.mit_pdos.gokv.vrsm.configservice.
Require Export New.generatedproof.github_com.mit_pdos.gokv.vrsm.e.
Require Export New.generatedproof.github_com.mit_pdos.gokv.vrsm.replica.
Require Export New.golang.theory.

Require Export New.code.github_com.mit_pdos.gokv.vrsm.clerk.
Module clerk.
Axiom falso : False.
Module Clerk.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  confCk' : loc;
  replicaClerks' : slice.t;
  preferredReplica' : w64;
  lastPreferenceRefresh' : w64;
}.
End def.
End Clerk.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Clerk `{ffi_syntax}: Settable _ :=
  settable! Clerk.mk < Clerk.confCk'; Clerk.replicaClerks'; Clerk.preferredReplica'; Clerk.lastPreferenceRefresh' >.
Global Instance into_val_Clerk `{ffi_syntax} : IntoVal Clerk.t.
Admitted.

Global Instance into_val_typed_Clerk `{ffi_syntax} : IntoValTyped Clerk.t clerk.Clerk :=
{|
  default_val := Clerk.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Clerk_confCk `{ffi_syntax} : IntoValStructField "confCk" clerk.Clerk Clerk.confCk'.
Admitted.

Global Instance into_val_struct_field_Clerk_replicaClerks `{ffi_syntax} : IntoValStructField "replicaClerks" clerk.Clerk Clerk.replicaClerks'.
Admitted.

Global Instance into_val_struct_field_Clerk_preferredReplica `{ffi_syntax} : IntoValStructField "preferredReplica" clerk.Clerk Clerk.preferredReplica'.
Admitted.

Global Instance into_val_struct_field_Clerk_lastPreferenceRefresh `{ffi_syntax} : IntoValStructField "lastPreferenceRefresh" clerk.Clerk Clerk.lastPreferenceRefresh'.
Admitted.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Clerk `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} confCk' replicaClerks' preferredReplica' lastPreferenceRefresh':
  PureWp True
    (struct.make #clerk.Clerk (alist_val [
      "confCk" ::= #confCk';
      "replicaClerks" ::= #replicaClerks';
      "preferredReplica" ::= #preferredReplica';
      "lastPreferenceRefresh" ::= #lastPreferenceRefresh'
    ]))%struct
    #(Clerk.mk confCk' replicaClerks' preferredReplica' lastPreferenceRefresh').
Admitted.


Global Instance Clerk_struct_fields_split dq l (v : Clerk.t) :
  StructFieldsSplit dq l v (
    "HconfCk" ∷ l ↦s[clerk.Clerk :: "confCk"]{dq} v.(Clerk.confCk') ∗
    "HreplicaClerks" ∷ l ↦s[clerk.Clerk :: "replicaClerks"]{dq} v.(Clerk.replicaClerks') ∗
    "HpreferredReplica" ∷ l ↦s[clerk.Clerk :: "preferredReplica"]{dq} v.(Clerk.preferredReplica') ∗
    "HlastPreferenceRefresh" ∷ l ↦s[clerk.Clerk :: "lastPreferenceRefresh"]{dq} v.(Clerk.lastPreferenceRefresh')
  ).
Admitted.

End instances.

Section names.

Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Global Instance is_pkg_defined_instance : IsPkgDefined clerk :=
{|
  is_pkg_defined := is_global_definitions clerk var_addrs;
|}.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_makeClerks :
  WpFuncCall clerk "makeClerks" _ (is_pkg_defined clerk) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Make :
  WpFuncCall clerk "Make" _ (is_pkg_defined clerk) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Clerk'ptr_Apply :
  WpMethodCall clerk "Clerk'ptr" "Apply" _ (is_pkg_defined clerk) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Clerk'ptr_ApplyRo :
  WpMethodCall clerk "Clerk'ptr" "ApplyRo" _ (is_pkg_defined clerk) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Clerk'ptr_ApplyRo2 :
  WpMethodCall clerk "Clerk'ptr" "ApplyRo2" _ (is_pkg_defined clerk) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Clerk'ptr_maybeRefreshPreference :
  WpMethodCall clerk "Clerk'ptr" "maybeRefreshPreference" _ (is_pkg_defined clerk) :=
  ltac:(apply wp_method_call'; reflexivity).

End names.
End clerk.
