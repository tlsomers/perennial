(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import io.
From New.golang Require Import theory.

Axiom falso : False.

Module LimitedReader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  R' : interface.t;
  N' : w64;
}.
End def.
End LimitedReader.


Global Instance settable_LimitedReader `{ffi_syntax}: Settable _ :=
  settable! LimitedReader.mk < LimitedReader.R'; LimitedReader.N' >.
Global Instance into_val_LimitedReader `{ffi_syntax} : IntoVal LimitedReader.t.
Admitted.

Global Instance into_val_typed_LimitedReader `{ffi_syntax} : IntoValTyped LimitedReader.t io.LimitedReader :=
{|
  default_val := LimitedReader.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_LimitedReader_R `{ffi_syntax} : IntoValStructField "R" io.LimitedReader LimitedReader.R'.
Admitted.

Global Instance into_val_struct_field_LimitedReader_N `{ffi_syntax} : IntoValStructField "N" io.LimitedReader LimitedReader.N'.
Admitted.

Instance wp_struct_make_LimitedReader `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} R' N':
  PureWp True
    (struct.make io.LimitedReader (alist_val [
      "R" ::= #R';
      "N" ::= #N'
    ]))%V
    #(LimitedReader.mk R' N').
Admitted.

Module SectionReader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  r' : interface.t;
  base' : w64;
  off' : w64;
  limit' : w64;
  n' : w64;
}.
End def.
End SectionReader.


Global Instance settable_SectionReader `{ffi_syntax}: Settable _ :=
  settable! SectionReader.mk < SectionReader.r'; SectionReader.base'; SectionReader.off'; SectionReader.limit'; SectionReader.n' >.
Global Instance into_val_SectionReader `{ffi_syntax} : IntoVal SectionReader.t.
Admitted.

Global Instance into_val_typed_SectionReader `{ffi_syntax} : IntoValTyped SectionReader.t io.SectionReader :=
{|
  default_val := SectionReader.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_SectionReader_r `{ffi_syntax} : IntoValStructField "r" io.SectionReader SectionReader.r'.
Admitted.

Global Instance into_val_struct_field_SectionReader_base `{ffi_syntax} : IntoValStructField "base" io.SectionReader SectionReader.base'.
Admitted.

Global Instance into_val_struct_field_SectionReader_off `{ffi_syntax} : IntoValStructField "off" io.SectionReader SectionReader.off'.
Admitted.

Global Instance into_val_struct_field_SectionReader_limit `{ffi_syntax} : IntoValStructField "limit" io.SectionReader SectionReader.limit'.
Admitted.

Global Instance into_val_struct_field_SectionReader_n `{ffi_syntax} : IntoValStructField "n" io.SectionReader SectionReader.n'.
Admitted.

Instance wp_struct_make_SectionReader `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} r' base' off' limit' n':
  PureWp True
    (struct.make io.SectionReader (alist_val [
      "r" ::= #r';
      "base" ::= #base';
      "off" ::= #off';
      "limit" ::= #limit';
      "n" ::= #n'
    ]))%V
    #(SectionReader.mk r' base' off' limit' n').
Admitted.

Module OffsetWriter.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  w' : interface.t;
  base' : w64;
  off' : w64;
}.
End def.
End OffsetWriter.


Global Instance settable_OffsetWriter `{ffi_syntax}: Settable _ :=
  settable! OffsetWriter.mk < OffsetWriter.w'; OffsetWriter.base'; OffsetWriter.off' >.
Global Instance into_val_OffsetWriter `{ffi_syntax} : IntoVal OffsetWriter.t.
Admitted.

Global Instance into_val_typed_OffsetWriter `{ffi_syntax} : IntoValTyped OffsetWriter.t io.OffsetWriter :=
{|
  default_val := OffsetWriter.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_OffsetWriter_w `{ffi_syntax} : IntoValStructField "w" io.OffsetWriter OffsetWriter.w'.
Admitted.

Global Instance into_val_struct_field_OffsetWriter_base `{ffi_syntax} : IntoValStructField "base" io.OffsetWriter OffsetWriter.base'.
Admitted.

Global Instance into_val_struct_field_OffsetWriter_off `{ffi_syntax} : IntoValStructField "off" io.OffsetWriter OffsetWriter.off'.
Admitted.

Instance wp_struct_make_OffsetWriter `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} w' base' off':
  PureWp True
    (struct.make io.OffsetWriter (alist_val [
      "w" ::= #w';
      "base" ::= #base';
      "off" ::= #off'
    ]))%V
    #(OffsetWriter.mk w' base' off').
Admitted.

Module teeReader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  r' : interface.t;
  w' : interface.t;
}.
End def.
End teeReader.


Global Instance settable_teeReader `{ffi_syntax}: Settable _ :=
  settable! teeReader.mk < teeReader.r'; teeReader.w' >.
Global Instance into_val_teeReader `{ffi_syntax} : IntoVal teeReader.t.
Admitted.

Global Instance into_val_typed_teeReader `{ffi_syntax} : IntoValTyped teeReader.t io.teeReader :=
{|
  default_val := teeReader.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_teeReader_r `{ffi_syntax} : IntoValStructField "r" io.teeReader teeReader.r'.
Admitted.

Global Instance into_val_struct_field_teeReader_w `{ffi_syntax} : IntoValStructField "w" io.teeReader teeReader.w'.
Admitted.

Instance wp_struct_make_teeReader `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} r' w':
  PureWp True
    (struct.make io.teeReader (alist_val [
      "r" ::= #r';
      "w" ::= #w'
    ]))%V
    #(teeReader.mk r' w').
Admitted.

Module discard.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End discard.

Global Instance into_val_discard `{ffi_syntax} : IntoVal discard.t.
Admitted.

Global Instance into_val_typed_discard `{ffi_syntax} : IntoValTyped discard.t io.discard :=
{|
  default_val := discard.mk;
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Instance wp_struct_make_discard `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ}:
  PureWp True
    (struct.make io.discard (alist_val [
    ]))%V
    #(discard.mk).
Admitted.

Module nopCloser.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Reader' : interface.t;
}.
End def.
End nopCloser.


Global Instance settable_nopCloser `{ffi_syntax}: Settable _ :=
  settable! nopCloser.mk < nopCloser.Reader' >.
Global Instance into_val_nopCloser `{ffi_syntax} : IntoVal nopCloser.t.
Admitted.

Global Instance into_val_typed_nopCloser `{ffi_syntax} : IntoValTyped nopCloser.t io.nopCloser :=
{|
  default_val := nopCloser.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_nopCloser_Reader `{ffi_syntax} : IntoValStructField "Reader" io.nopCloser nopCloser.Reader'.
Admitted.

Instance wp_struct_make_nopCloser `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Reader':
  PureWp True
    (struct.make io.nopCloser (alist_val [
      "Reader" ::= #Reader'
    ]))%V
    #(nopCloser.mk Reader').
Admitted.

Module nopCloserWriterTo.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Reader' : interface.t;
}.
End def.
End nopCloserWriterTo.


Global Instance settable_nopCloserWriterTo `{ffi_syntax}: Settable _ :=
  settable! nopCloserWriterTo.mk < nopCloserWriterTo.Reader' >.
Global Instance into_val_nopCloserWriterTo `{ffi_syntax} : IntoVal nopCloserWriterTo.t.
Admitted.

Global Instance into_val_typed_nopCloserWriterTo `{ffi_syntax} : IntoValTyped nopCloserWriterTo.t io.nopCloserWriterTo :=
{|
  default_val := nopCloserWriterTo.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_nopCloserWriterTo_Reader `{ffi_syntax} : IntoValStructField "Reader" io.nopCloserWriterTo nopCloserWriterTo.Reader'.
Admitted.

Instance wp_struct_make_nopCloserWriterTo `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Reader':
  PureWp True
    (struct.make io.nopCloserWriterTo (alist_val [
      "Reader" ::= #Reader'
    ]))%V
    #(nopCloserWriterTo.mk Reader').
Admitted.

Module eofReader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End eofReader.

Global Instance into_val_eofReader `{ffi_syntax} : IntoVal eofReader.t.
Admitted.

Global Instance into_val_typed_eofReader `{ffi_syntax} : IntoValTyped eofReader.t io.eofReader :=
{|
  default_val := eofReader.mk;
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Instance wp_struct_make_eofReader `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ}:
  PureWp True
    (struct.make io.eofReader (alist_val [
    ]))%V
    #(eofReader.mk).
Admitted.

Module multiReader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  readers' : slice.t;
}.
End def.
End multiReader.


Global Instance settable_multiReader `{ffi_syntax}: Settable _ :=
  settable! multiReader.mk < multiReader.readers' >.
Global Instance into_val_multiReader `{ffi_syntax} : IntoVal multiReader.t.
Admitted.

Global Instance into_val_typed_multiReader `{ffi_syntax} : IntoValTyped multiReader.t io.multiReader :=
{|
  default_val := multiReader.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_multiReader_readers `{ffi_syntax} : IntoValStructField "readers" io.multiReader multiReader.readers'.
Admitted.

Instance wp_struct_make_multiReader `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} readers':
  PureWp True
    (struct.make io.multiReader (alist_val [
      "readers" ::= #readers'
    ]))%V
    #(multiReader.mk readers').
Admitted.

Module multiWriter.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  writers' : slice.t;
}.
End def.
End multiWriter.


Global Instance settable_multiWriter `{ffi_syntax}: Settable _ :=
  settable! multiWriter.mk < multiWriter.writers' >.
Global Instance into_val_multiWriter `{ffi_syntax} : IntoVal multiWriter.t.
Admitted.

Global Instance into_val_typed_multiWriter `{ffi_syntax} : IntoValTyped multiWriter.t io.multiWriter :=
{|
  default_val := multiWriter.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_multiWriter_writers `{ffi_syntax} : IntoValStructField "writers" io.multiWriter multiWriter.writers'.
Admitted.

Instance wp_struct_make_multiWriter `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} writers':
  PureWp True
    (struct.make io.multiWriter (alist_val [
      "writers" ::= #writers'
    ]))%V
    #(multiWriter.mk writers').
Admitted.

Module onceError.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Mutex' : sync.Mutex.t;
  err' : interface.t;
}.
End def.
End onceError.


Global Instance settable_onceError `{ffi_syntax}: Settable _ :=
  settable! onceError.mk < onceError.Mutex'; onceError.err' >.
Global Instance into_val_onceError `{ffi_syntax} : IntoVal onceError.t.
Admitted.

Global Instance into_val_typed_onceError `{ffi_syntax} : IntoValTyped onceError.t io.onceError :=
{|
  default_val := onceError.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_onceError_Mutex `{ffi_syntax} : IntoValStructField "Mutex" io.onceError onceError.Mutex'.
Admitted.

Global Instance into_val_struct_field_onceError_err `{ffi_syntax} : IntoValStructField "err" io.onceError onceError.err'.
Admitted.

Instance wp_struct_make_onceError `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Mutex' err':
  PureWp True
    (struct.make io.onceError (alist_val [
      "Mutex" ::= #Mutex';
      "err" ::= #err'
    ]))%V
    #(onceError.mk Mutex' err').
Admitted.

Module pipe.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  wrMu' : sync.Mutex.t;
  wrCh' : loc;
  rdCh' : loc;
  once' : sync.Once.t;
  done' : loc;
  rerr' : onceError.t;
  werr' : onceError.t;
}.
End def.
End pipe.


Global Instance settable_pipe `{ffi_syntax}: Settable _ :=
  settable! pipe.mk < pipe.wrMu'; pipe.wrCh'; pipe.rdCh'; pipe.once'; pipe.done'; pipe.rerr'; pipe.werr' >.
Global Instance into_val_pipe `{ffi_syntax} : IntoVal pipe.t.
Admitted.

Global Instance into_val_typed_pipe `{ffi_syntax} : IntoValTyped pipe.t io.pipe :=
{|
  default_val := pipe.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_pipe_wrMu `{ffi_syntax} : IntoValStructField "wrMu" io.pipe pipe.wrMu'.
Admitted.

Global Instance into_val_struct_field_pipe_wrCh `{ffi_syntax} : IntoValStructField "wrCh" io.pipe pipe.wrCh'.
Admitted.

Global Instance into_val_struct_field_pipe_rdCh `{ffi_syntax} : IntoValStructField "rdCh" io.pipe pipe.rdCh'.
Admitted.

Global Instance into_val_struct_field_pipe_once `{ffi_syntax} : IntoValStructField "once" io.pipe pipe.once'.
Admitted.

Global Instance into_val_struct_field_pipe_done `{ffi_syntax} : IntoValStructField "done" io.pipe pipe.done'.
Admitted.

Global Instance into_val_struct_field_pipe_rerr `{ffi_syntax} : IntoValStructField "rerr" io.pipe pipe.rerr'.
Admitted.

Global Instance into_val_struct_field_pipe_werr `{ffi_syntax} : IntoValStructField "werr" io.pipe pipe.werr'.
Admitted.

Instance wp_struct_make_pipe `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} wrMu' wrCh' rdCh' once' done' rerr' werr':
  PureWp True
    (struct.make io.pipe (alist_val [
      "wrMu" ::= #wrMu';
      "wrCh" ::= #wrCh';
      "rdCh" ::= #rdCh';
      "once" ::= #once';
      "done" ::= #done';
      "rerr" ::= #rerr';
      "werr" ::= #werr'
    ]))%V
    #(pipe.mk wrMu' wrCh' rdCh' once' done' rerr' werr').
Admitted.

Module PipeReader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  pipe' : pipe.t;
}.
End def.
End PipeReader.


Global Instance settable_PipeReader `{ffi_syntax}: Settable _ :=
  settable! PipeReader.mk < PipeReader.pipe' >.
Global Instance into_val_PipeReader `{ffi_syntax} : IntoVal PipeReader.t.
Admitted.

Global Instance into_val_typed_PipeReader `{ffi_syntax} : IntoValTyped PipeReader.t io.PipeReader :=
{|
  default_val := PipeReader.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_PipeReader_pipe `{ffi_syntax} : IntoValStructField "pipe" io.PipeReader PipeReader.pipe'.
Admitted.

Instance wp_struct_make_PipeReader `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} pipe':
  PureWp True
    (struct.make io.PipeReader (alist_val [
      "pipe" ::= #pipe'
    ]))%V
    #(PipeReader.mk pipe').
Admitted.

Module PipeWriter.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  r' : PipeReader.t;
}.
End def.
End PipeWriter.


Global Instance settable_PipeWriter `{ffi_syntax}: Settable _ :=
  settable! PipeWriter.mk < PipeWriter.r' >.
Global Instance into_val_PipeWriter `{ffi_syntax} : IntoVal PipeWriter.t.
Admitted.

Global Instance into_val_typed_PipeWriter `{ffi_syntax} : IntoValTyped PipeWriter.t io.PipeWriter :=
{|
  default_val := PipeWriter.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_PipeWriter_r `{ffi_syntax} : IntoValStructField "r" io.PipeWriter PipeWriter.r'.
Admitted.

Instance wp_struct_make_PipeWriter `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} r':
  PureWp True
    (struct.make io.PipeWriter (alist_val [
      "r" ::= #r'
    ]))%V
    #(PipeWriter.mk r').
Admitted.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.io.
Require Export New.proof.proof_prelude.
Module io.
Section defs.
Class GlobalAddrs :=
{
  ErrShortWrite : loc;
  errInvalidWrite : loc;
  ErrShortBuffer : loc;
  EOF : loc;
  ErrUnexpectedEOF : loc;
  ErrNoProgress : loc;
  errWhence : loc;
  errOffset : loc;
  Discard : loc;
  blackHolePool : loc;
  ErrClosedPipe : loc;
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
    ("ErrShortWrite"%go, ErrShortWrite);
    ("errInvalidWrite"%go, errInvalidWrite);
    ("ErrShortBuffer"%go, ErrShortBuffer);
    ("EOF"%go, EOF);
    ("ErrUnexpectedEOF"%go, ErrUnexpectedEOF);
    ("ErrNoProgress"%go, ErrNoProgress);
    ("errWhence"%go, errWhence);
    ("errOffset"%go, errOffset);
    ("Discard"%go, Discard);
    ("blackHolePool"%go, blackHolePool);
    ("ErrClosedPipe"%go, ErrClosedPipe)
  ].

Definition is_defined := is_global_definitions io.pkg_name' var_addrs io.functions' io.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
  "HErrShortWrite" ∷ ErrShortWrite ↦ (default_val interface.t) ∗
  "HerrInvalidWrite" ∷ errInvalidWrite ↦ (default_val interface.t) ∗
  "HErrShortBuffer" ∷ ErrShortBuffer ↦ (default_val interface.t) ∗
  "HEOF" ∷ EOF ↦ (default_val interface.t) ∗
  "HErrUnexpectedEOF" ∷ ErrUnexpectedEOF ↦ (default_val interface.t) ∗
  "HErrNoProgress" ∷ ErrNoProgress ↦ (default_val interface.t) ∗
  "HerrWhence" ∷ errWhence ↦ (default_val interface.t) ∗
  "HerrOffset" ∷ errOffset ↦ (default_val interface.t) ∗
  "HDiscard" ∷ Discard ↦ (default_val interface.t) ∗
  "HblackHolePool" ∷ blackHolePool ↦ (default_val sync.Pool.t) ∗
  "HErrClosedPipe" ∷ ErrClosedPipe ↦ (default_val interface.t).

Global Instance wp_globals_get_ErrShortWrite : 
  WpGlobalsGet io.pkg_name' "ErrShortWrite" ErrShortWrite is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_errInvalidWrite : 
  WpGlobalsGet io.pkg_name' "errInvalidWrite" errInvalidWrite is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_ErrShortBuffer : 
  WpGlobalsGet io.pkg_name' "ErrShortBuffer" ErrShortBuffer is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_EOF : 
  WpGlobalsGet io.pkg_name' "EOF" EOF is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_ErrUnexpectedEOF : 
  WpGlobalsGet io.pkg_name' "ErrUnexpectedEOF" ErrUnexpectedEOF is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_ErrNoProgress : 
  WpGlobalsGet io.pkg_name' "ErrNoProgress" ErrNoProgress is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_errWhence : 
  WpGlobalsGet io.pkg_name' "errWhence" errWhence is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_errOffset : 
  WpGlobalsGet io.pkg_name' "errOffset" errOffset is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_Discard : 
  WpGlobalsGet io.pkg_name' "Discard" Discard is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_blackHolePool : 
  WpGlobalsGet io.pkg_name' "blackHolePool" blackHolePool is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_ErrClosedPipe : 
  WpGlobalsGet io.pkg_name' "ErrClosedPipe" ErrClosedPipe is_defined.
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_func_call_WriteString : 
  WpFuncCall io.pkg_name' "WriteString" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadAtLeast : 
  WpFuncCall io.pkg_name' "ReadAtLeast" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadFull : 
  WpFuncCall io.pkg_name' "ReadFull" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_CopyN : 
  WpFuncCall io.pkg_name' "CopyN" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Copy : 
  WpFuncCall io.pkg_name' "Copy" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_CopyBuffer : 
  WpFuncCall io.pkg_name' "CopyBuffer" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_copyBuffer : 
  WpFuncCall io.pkg_name' "copyBuffer" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_LimitReader : 
  WpFuncCall io.pkg_name' "LimitReader" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_NewSectionReader : 
  WpFuncCall io.pkg_name' "NewSectionReader" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_NewOffsetWriter : 
  WpFuncCall io.pkg_name' "NewOffsetWriter" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_TeeReader : 
  WpFuncCall io.pkg_name' "TeeReader" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_NopCloser : 
  WpFuncCall io.pkg_name' "NopCloser" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadAll : 
  WpFuncCall io.pkg_name' "ReadAll" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_MultiReader : 
  WpFuncCall io.pkg_name' "MultiReader" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_MultiWriter : 
  WpFuncCall io.pkg_name' "MultiWriter" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Pipe : 
  WpFuncCall io.pkg_name' "Pipe" _ is_defined :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_LimitedReader'ptr_Read : 
  WpMethodCall io.pkg_name' "LimitedReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_SectionReader'ptr_Outer : 
  WpMethodCall io.pkg_name' "SectionReader'ptr" "Outer" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_SectionReader'ptr_Read : 
  WpMethodCall io.pkg_name' "SectionReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_SectionReader'ptr_ReadAt : 
  WpMethodCall io.pkg_name' "SectionReader'ptr" "ReadAt" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_SectionReader'ptr_Seek : 
  WpMethodCall io.pkg_name' "SectionReader'ptr" "Seek" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_SectionReader'ptr_Size : 
  WpMethodCall io.pkg_name' "SectionReader'ptr" "Size" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_OffsetWriter'ptr_Seek : 
  WpMethodCall io.pkg_name' "OffsetWriter'ptr" "Seek" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_OffsetWriter'ptr_Write : 
  WpMethodCall io.pkg_name' "OffsetWriter'ptr" "Write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_OffsetWriter'ptr_WriteAt : 
  WpMethodCall io.pkg_name' "OffsetWriter'ptr" "WriteAt" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_teeReader'ptr_Read : 
  WpMethodCall io.pkg_name' "teeReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_discard_ReadFrom : 
  WpMethodCall io.pkg_name' "discard" "ReadFrom" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_discard_Write : 
  WpMethodCall io.pkg_name' "discard" "Write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_discard_WriteString : 
  WpMethodCall io.pkg_name' "discard" "WriteString" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_discard'ptr_ReadFrom : 
  WpMethodCall io.pkg_name' "discard'ptr" "ReadFrom" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_discard'ptr_Write : 
  WpMethodCall io.pkg_name' "discard'ptr" "Write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_discard'ptr_WriteString : 
  WpMethodCall io.pkg_name' "discard'ptr" "WriteString" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloser_Close : 
  WpMethodCall io.pkg_name' "nopCloser" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloser_Read : 
  WpMethodCall io.pkg_name' "nopCloser" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloser'ptr_Close : 
  WpMethodCall io.pkg_name' "nopCloser'ptr" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloser'ptr_Read : 
  WpMethodCall io.pkg_name' "nopCloser'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloserWriterTo_Close : 
  WpMethodCall io.pkg_name' "nopCloserWriterTo" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloserWriterTo_Read : 
  WpMethodCall io.pkg_name' "nopCloserWriterTo" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloserWriterTo_WriteTo : 
  WpMethodCall io.pkg_name' "nopCloserWriterTo" "WriteTo" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloserWriterTo'ptr_Close : 
  WpMethodCall io.pkg_name' "nopCloserWriterTo'ptr" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloserWriterTo'ptr_Read : 
  WpMethodCall io.pkg_name' "nopCloserWriterTo'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_nopCloserWriterTo'ptr_WriteTo : 
  WpMethodCall io.pkg_name' "nopCloserWriterTo'ptr" "WriteTo" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_eofReader_Read : 
  WpMethodCall io.pkg_name' "eofReader" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_eofReader'ptr_Read : 
  WpMethodCall io.pkg_name' "eofReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_multiReader'ptr_Read : 
  WpMethodCall io.pkg_name' "multiReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_multiReader'ptr_WriteTo : 
  WpMethodCall io.pkg_name' "multiReader'ptr" "WriteTo" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_multiReader'ptr_writeToWithBuffer : 
  WpMethodCall io.pkg_name' "multiReader'ptr" "writeToWithBuffer" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_multiWriter'ptr_Write : 
  WpMethodCall io.pkg_name' "multiWriter'ptr" "Write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_multiWriter'ptr_WriteString : 
  WpMethodCall io.pkg_name' "multiWriter'ptr" "WriteString" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_Load : 
  WpMethodCall io.pkg_name' "onceError'ptr" "Load" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_Lock : 
  WpMethodCall io.pkg_name' "onceError'ptr" "Lock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_Store : 
  WpMethodCall io.pkg_name' "onceError'ptr" "Store" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_TryLock : 
  WpMethodCall io.pkg_name' "onceError'ptr" "TryLock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_Unlock : 
  WpMethodCall io.pkg_name' "onceError'ptr" "Unlock" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_lockSlow : 
  WpMethodCall io.pkg_name' "onceError'ptr" "lockSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_onceError'ptr_unlockSlow : 
  WpMethodCall io.pkg_name' "onceError'ptr" "unlockSlow" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_pipe'ptr_closeRead : 
  WpMethodCall io.pkg_name' "pipe'ptr" "closeRead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_pipe'ptr_closeWrite : 
  WpMethodCall io.pkg_name' "pipe'ptr" "closeWrite" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_pipe'ptr_read : 
  WpMethodCall io.pkg_name' "pipe'ptr" "read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_pipe'ptr_readCloseError : 
  WpMethodCall io.pkg_name' "pipe'ptr" "readCloseError" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_pipe'ptr_write : 
  WpMethodCall io.pkg_name' "pipe'ptr" "write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_pipe'ptr_writeCloseError : 
  WpMethodCall io.pkg_name' "pipe'ptr" "writeCloseError" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_Close : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_CloseWithError : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "CloseWithError" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_Read : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "Read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_closeRead : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "closeRead" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_closeWrite : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "closeWrite" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_read : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "read" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_readCloseError : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "readCloseError" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_write : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeReader'ptr_writeCloseError : 
  WpMethodCall io.pkg_name' "PipeReader'ptr" "writeCloseError" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeWriter'ptr_Close : 
  WpMethodCall io.pkg_name' "PipeWriter'ptr" "Close" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeWriter'ptr_CloseWithError : 
  WpMethodCall io.pkg_name' "PipeWriter'ptr" "CloseWithError" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_PipeWriter'ptr_Write : 
  WpMethodCall io.pkg_name' "PipeWriter'ptr" "Write" _ is_defined :=
  ltac:(apply wp_method_call'; reflexivity).

End defs.
End io.
