(* autogenerated by goose record generator; do not modify *)
From New.code Require Import github_com.goose_lang.std.
From New.golang Require Import theory.

Axiom falso : False.

Module JoinHandle.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  mu : loc;
  done : bool;
  cond : loc;
}.
End def.
End JoinHandle.


Global Instance settable_JoinHandle `{ffi_syntax}: Settable _ :=
  settable! JoinHandle.mk < JoinHandle.mu; JoinHandle.done; JoinHandle.cond >.
Global Instance into_val_JoinHandle `{ffi_syntax} : IntoVal JoinHandle.t.
Admitted.

Global Instance into_val_typed_JoinHandle `{ffi_syntax} : IntoValTyped JoinHandle.t JoinHandle :=
{|
  default_val := JoinHandle.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_JoinHandle_mu `{ffi_syntax} : IntoValStructField "mu" JoinHandle JoinHandle.mu.
Admitted.

Global Instance into_val_struct_field_JoinHandle_done `{ffi_syntax} : IntoValStructField "done" JoinHandle JoinHandle.done.
Admitted.

Global Instance into_val_struct_field_JoinHandle_cond `{ffi_syntax} : IntoValStructField "cond" JoinHandle JoinHandle.cond.
Admitted.

Instance wp_struct_make_JoinHandle `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Î£} mu done cond:
  PureWp True
    (struct.make JoinHandle (alist_val [
      "mu" ::= #mu;
      "done" ::= #done;
      "cond" ::= #cond
    ]))%V 
    #(JoinHandle.mk mu done cond).
Admitted.

