(* autogenerated by goose record generator; do not modify *)
From New.code Require Import github_com.goose_lang.goose.testdata.examples.append_log.
From New.golang Require Import theory.

Axiom falso : False.

Module Log.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  m : loc;
  sz : w64;
  diskSz : w64;
}.
End def.
End Log.


Global Instance settable_Log `{ffi_syntax}: Settable _ :=
  settable! Log.mk < Log.m; Log.sz; Log.diskSz >.
Global Instance into_val_Log `{ffi_syntax} : IntoVal Log.t.
Admitted.

Global Instance into_val_typed_Log `{ffi_syntax} : IntoValTyped Log.t append_log.Log :=
{|
  default_val := Log.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Log_m `{ffi_syntax} : IntoValStructField "m" append_log.Log Log.m.
Admitted.

Global Instance into_val_struct_field_Log_sz `{ffi_syntax} : IntoValStructField "sz" append_log.Log Log.sz.
Admitted.

Global Instance into_val_struct_field_Log_diskSz `{ffi_syntax} : IntoValStructField "diskSz" append_log.Log Log.diskSz.
Admitted.

Instance wp_struct_make_Log `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Î£} m sz diskSz:
  PureWp True
    (struct.make append_log.Log (alist_val [
      "m" ::= #m;
      "sz" ::= #sz;
      "diskSz" ::= #diskSz
    ]))%V 
    #(Log.mk m sz diskSz).
Admitted.

