(* autogenerated by goose record generator; do not modify *)
From New.code Require Import internal.godebug.
From New.golang Require Import theory.

Require New.generatedproof.structs.sync.
Require New.generatedproof.structs.sync.atomic.
Axiom falso : False.

Module Setting.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  name : go_string;
  once : sync.Once.t;
  setting : loc;
}.
End def.
End Setting.


Global Instance settable_Setting `{ffi_syntax}: Settable _ :=
  settable! Setting.mk < Setting.name; Setting.once; Setting.setting >.
Global Instance into_val_Setting `{ffi_syntax} : IntoVal Setting.t.
Admitted.

Global Instance into_val_typed_Setting `{ffi_syntax} : IntoValTyped Setting.t godebug.Setting :=
{|
  default_val := Setting.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Setting_name `{ffi_syntax} : IntoValStructField "name" godebug.Setting Setting.name.
Admitted.

Global Instance into_val_struct_field_Setting_once `{ffi_syntax} : IntoValStructField "once" godebug.Setting Setting.once.
Admitted.

Global Instance into_val_struct_field_Setting_setting `{ffi_syntax} : IntoValStructField "setting" godebug.Setting Setting.setting.
Admitted.

Instance wp_struct_make_Setting `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} name once setting:
  PureWp True
    (struct.make godebug.Setting (alist_val [
      "name" ::= #name;
      "once" ::= #once;
      "setting" ::= #setting
    ]))%V 
    #(Setting.mk name once setting).
Admitted.

Module setting.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  value : atomic.Pointer.t;
  nonDefaultOnce : sync.Once.t;
  nonDefault : atomic.Uint64.t;
  info : loc;
}.
End def.
End setting.


Global Instance settable_setting `{ffi_syntax}: Settable _ :=
  settable! setting.mk < setting.value; setting.nonDefaultOnce; setting.nonDefault; setting.info >.
Global Instance into_val_setting `{ffi_syntax} : IntoVal setting.t.
Admitted.

Global Instance into_val_typed_setting `{ffi_syntax} : IntoValTyped setting.t godebug.setting :=
{|
  default_val := setting.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_setting_value `{ffi_syntax} : IntoValStructField "value" godebug.setting setting.value.
Admitted.

Global Instance into_val_struct_field_setting_nonDefaultOnce `{ffi_syntax} : IntoValStructField "nonDefaultOnce" godebug.setting setting.nonDefaultOnce.
Admitted.

Global Instance into_val_struct_field_setting_nonDefault `{ffi_syntax} : IntoValStructField "nonDefault" godebug.setting setting.nonDefault.
Admitted.

Global Instance into_val_struct_field_setting_info `{ffi_syntax} : IntoValStructField "info" godebug.setting setting.info.
Admitted.

Instance wp_struct_make_setting `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} value nonDefaultOnce nonDefault info:
  PureWp True
    (struct.make godebug.setting (alist_val [
      "value" ::= #value;
      "nonDefaultOnce" ::= #nonDefaultOnce;
      "nonDefault" ::= #nonDefault;
      "info" ::= #info
    ]))%V 
    #(setting.mk value nonDefaultOnce nonDefault info).
Admitted.

Module value.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  text : go_string;
  bisect : loc;
}.
End def.
End value.


Global Instance settable_value `{ffi_syntax}: Settable _ :=
  settable! value.mk < value.text; value.bisect >.
Global Instance into_val_value `{ffi_syntax} : IntoVal value.t.
Admitted.

Global Instance into_val_typed_value `{ffi_syntax} : IntoValTyped value.t godebug.value :=
{|
  default_val := value.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_value_text `{ffi_syntax} : IntoValStructField "text" godebug.value value.text.
Admitted.

Global Instance into_val_struct_field_value_bisect `{ffi_syntax} : IntoValStructField "bisect" godebug.value value.bisect.
Admitted.

Instance wp_struct_make_value `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} text bisect:
  PureWp True
    (struct.make godebug.value (alist_val [
      "text" ::= #text;
      "bisect" ::= #bisect
    ]))%V 
    #(value.mk text bisect).
Admitted.

Module runtimeStderr.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End runtimeStderr.

Global Instance into_val_runtimeStderr `{ffi_syntax} : IntoVal runtimeStderr.t.
Admitted.

Global Instance into_val_typed_runtimeStderr `{ffi_syntax} : IntoValTyped runtimeStderr.t godebug.runtimeStderr :=
{|
  default_val := runtimeStderr.mk;
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Instance wp_struct_make_runtimeStderr `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ}:
  PureWp True
    (struct.make godebug.runtimeStderr (alist_val [
    ]))%V 
    #(runtimeStderr.mk).
Admitted.

