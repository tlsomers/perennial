(* autogenerated by goose record generator; do not modify *)
From New.code Require Import errors.
From New.golang Require Import theory.

Axiom falso : False.

Module errorString.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  s : go_string;
}.
End def.
End errorString.


Global Instance settable_errorString `{ffi_syntax}: Settable _ :=
  settable! errorString.mk < errorString.s >.
Global Instance into_val_errorString `{ffi_syntax} : IntoVal errorString.t.
Admitted.

Global Instance into_val_typed_errorString `{ffi_syntax} : IntoValTyped errorString.t errors.errorString :=
{|
  default_val := errorString.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_errorString_s `{ffi_syntax} : IntoValStructField "s" errors.errorString errorString.s.
Admitted.

Instance wp_struct_make_errorString `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} s:
  PureWp True
    (struct.make errors.errorString (alist_val [
      "s" ::= #s
    ]))%V 
    #(errorString.mk s).
Admitted.

Module joinError.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  errs : slice.t;
}.
End def.
End joinError.


Global Instance settable_joinError `{ffi_syntax}: Settable _ :=
  settable! joinError.mk < joinError.errs >.
Global Instance into_val_joinError `{ffi_syntax} : IntoVal joinError.t.
Admitted.

Global Instance into_val_typed_joinError `{ffi_syntax} : IntoValTyped joinError.t errors.joinError :=
{|
  default_val := joinError.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_joinError_errs `{ffi_syntax} : IntoValStructField "errs" errors.joinError joinError.errs.
Admitted.

Instance wp_struct_make_joinError `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} errs:
  PureWp True
    (struct.make errors.joinError (alist_val [
      "errs" ::= #errs
    ]))%V 
    #(joinError.mk errs).
Admitted.

