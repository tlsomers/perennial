(* autogenerated by goose record generator; do not modify *)
From New.code Require Import go_etcd_io.raft.v3.quorum.
From New.golang Require Import theory.

Axiom falso : False.

Module unit.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End unit.

Global Instance into_val_unit `{ffi_syntax} : IntoVal unit.t.
Admitted.

Global Instance into_val_typed_unit `{ffi_syntax} : IntoValTyped unit.t quorum.unit :=
{|
  default_val := unit.mk;
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Instance wp_struct_make_unit `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ}:
  PureWp True
    (struct.make quorum.unit (alist_val [
    ]))%V 
    #(unit.mk).
Admitted.

Module tup.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  id : w64;
  idx : w64;
  ok : bool;
  bar : w64;
}.
End def.
End tup.


Global Instance settable_tup `{ffi_syntax}: Settable _ :=
  settable! tup.mk < tup.id; tup.idx; tup.ok; tup.bar >.
Global Instance into_val_tup `{ffi_syntax} : IntoVal tup.t.
Admitted.

Global Instance into_val_typed_tup `{ffi_syntax} : IntoValTyped tup.t quorum.tup :=
{|
  default_val := tup.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_tup_id `{ffi_syntax} : IntoValStructField "id" quorum.tup tup.id.
Admitted.

Global Instance into_val_struct_field_tup_idx `{ffi_syntax} : IntoValStructField "idx" quorum.tup tup.idx.
Admitted.

Global Instance into_val_struct_field_tup_ok `{ffi_syntax} : IntoValStructField "ok" quorum.tup tup.ok.
Admitted.

Global Instance into_val_struct_field_tup_bar `{ffi_syntax} : IntoValStructField "bar" quorum.tup tup.bar.
Admitted.

Instance wp_struct_make_tup `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} id idx ok bar:
  PureWp True
    (struct.make quorum.tup (alist_val [
      "id" ::= #id;
      "idx" ::= #idx;
      "ok" ::= #ok;
      "bar" ::= #bar
    ]))%V 
    #(tup.mk id idx ok bar).
Admitted.

