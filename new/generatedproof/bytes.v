(* autogenerated by goose proofgen (types); do not modify *)
From New.code Require Import bytes.
From New.golang Require Import theory.

Axiom falso : False.

Module Buffer.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  buf' : slice.t;
  off' : w64;
  lastRead' : w8;
}.
End def.
End Buffer.


Global Instance settable_Buffer `{ffi_syntax}: Settable _ :=
  settable! Buffer.mk < Buffer.buf'; Buffer.off'; Buffer.lastRead' >.
Global Instance into_val_Buffer `{ffi_syntax} : IntoVal Buffer.t.
Admitted.

Global Instance into_val_typed_Buffer `{ffi_syntax} : IntoValTyped Buffer.t bytes.Buffer :=
{|
  default_val := Buffer.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Buffer_buf `{ffi_syntax} : IntoValStructField "buf" bytes.Buffer Buffer.buf'.
Admitted.

Global Instance into_val_struct_field_Buffer_off `{ffi_syntax} : IntoValStructField "off" bytes.Buffer Buffer.off'.
Admitted.

Global Instance into_val_struct_field_Buffer_lastRead `{ffi_syntax} : IntoValStructField "lastRead" bytes.Buffer Buffer.lastRead'.
Admitted.

Instance wp_struct_make_Buffer `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} buf' off' lastRead':
  PureWp True
    (struct.make bytes.Buffer (alist_val [
      "buf" ::= #buf';
      "off" ::= #off';
      "lastRead" ::= #lastRead'
    ]))%V
    #(Buffer.mk buf' off' lastRead').
Admitted.

(* autogenerated by proofgen (names); do not modify *)
Require Import New.code.bytes.
Require Export New.proof.proof_prelude.
Module bytes.
Section defs.
Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Definition is_defined := is_global_definitions bytes.pkg_name' var_addrs bytes.functions' bytes.msets'.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

End defs.
End bytes.
