(* autogenerated from go.etcd.io/raft/v3/raftpb *)
From New.golang Require Import defn.

Module raftpb.
Section code.
Context `{ffi_syntax}.


Definition EntryType : go_type := int32T.

Definition EntryConfChange : expr := #(W32 1).

Axiom EntryType_name'init : val.

Axiom EntryType_value'init : val.

Axiom MessageType_name'init : val.

Axiom MessageType_value'init : val.

Axiom ConfChangeTransition_name'init : val.

Axiom ConfChangeTransition_value'init : val.

Definition ConfChangeType : go_type := int32T.

Definition ConfChangeAddNode : expr := #(W32 0).

Axiom ConfChangeType_name'init : val.

Axiom ConfChangeType_value'init : val.

Definition Entry : go_type := structT [
  "Term" :: uint64T;
  "Index" :: uint64T;
  "Type" :: EntryType;
  "Data" :: sliceT
].

Definition ConfState : go_type := structT [
  "Voters" :: sliceT;
  "Learners" :: sliceT;
  "VotersOutgoing" :: sliceT;
  "LearnersNext" :: sliceT;
  "AutoLeave" :: boolT
].

Definition SnapshotMetadata : go_type := structT [
  "ConfState" :: ConfState;
  "Index" :: uint64T;
  "Term" :: uint64T
].

Definition Snapshot : go_type := structT [
  "Data" :: sliceT;
  "Metadata" :: SnapshotMetadata
].

Definition HardState : go_type := structT [
  "Term" :: uint64T;
  "Vote" :: uint64T;
  "Commit" :: uint64T
].

Definition ConfChange : go_type := structT [
  "Type" :: ConfChangeType;
  "NodeID" :: uint64T;
  "Context" :: sliceT;
  "ID" :: uint64T
].

Axiom fileDescriptor_b042552c306ae59b'init : val.

Axiom ErrInvalidLengthRaft'init : val.

Axiom ErrIntOverflowRaft'init : val.

Axiom ErrUnexpectedEndOfGroupRaft'init : val.

Definition pkg_name' : go_string := "go.etcd.io/raft/v3/raftpb".

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [("EntryType"%go, []); ("EntryType'ptr"%go, []); ("ConfChangeType"%go, []); ("ConfChangeType'ptr"%go, []); ("Entry"%go, []); ("Entry'ptr"%go, []); ("SnapshotMetadata"%go, []); ("SnapshotMetadata'ptr"%go, []); ("Snapshot"%go, []); ("Snapshot'ptr"%go, []); ("HardState"%go, []); ("HardState'ptr"%go, []); ("ConfState"%go, []); ("ConfState'ptr"%go, []); ("ConfChange"%go, []); ("ConfChange'ptr"%go, [])].

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init pkg_name' vars' functions' msets' (Î»: <>,
      exception_do (do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (EntryType_name'init #());;;
      do:  (EntryType_value'init #());;;
      do:  (MessageType_name'init #());;;
      do:  (MessageType_value'init #());;;
      do:  (ConfChangeTransition_name'init #());;;
      do:  (ConfChangeTransition_value'init #());;;
      do:  (ConfChangeType_name'init #());;;
      do:  (ConfChangeType_value'init #());;;
      do:  (fileDescriptor_b042552c306ae59b'init #());;;
      do:  (ErrInvalidLengthRaft'init #());;;
      do:  (ErrIntOverflowRaft'init #());;;
      do:  (ErrUnexpectedEndOfGroupRaft'init #()))
      ).

End code.
End raftpb.
