(* autogenerated from math *)
From New.golang Require Import defn.

Module math.
Section code.
Context `{ffi_syntax}.


Axiom useFMA'init : val.

Axiom _gamP'init : val.

Axiom _gamQ'init : val.

Axiom _gamS'init : val.

Axiom p0R8'init : val.

Axiom p0S8'init : val.

Axiom p0R5'init : val.

Axiom p0S5'init : val.

Axiom p0R3'init : val.

Axiom p0S3'init : val.

Axiom p0R2'init : val.

Axiom p0S2'init : val.

Axiom q0R8'init : val.

Axiom q0S8'init : val.

Axiom q0R5'init : val.

Axiom q0S5'init : val.

Axiom q0R3'init : val.

Axiom q0S3'init : val.

Axiom q0R2'init : val.

Axiom q0S2'init : val.

Axiom p1R8'init : val.

Axiom p1S8'init : val.

Axiom p1R5'init : val.

Axiom p1S5'init : val.

Axiom p1R3'init : val.

Axiom p1S3'init : val.

Axiom p1R2'init : val.

Axiom p1S2'init : val.

Axiom q1R8'init : val.

Axiom q1S8'init : val.

Axiom q1R5'init : val.

Axiom q1S5'init : val.

Axiom q1R3'init : val.

Axiom q1S3'init : val.

Axiom q1R2'init : val.

Axiom q1S2'init : val.

Axiom _lgamA'init : val.

Axiom _lgamR'init : val.

Axiom _lgamS'init : val.

Axiom _lgamT'init : val.

Axiom _lgamU'init : val.

Axiom _lgamV'init : val.

Axiom _lgamW'init : val.

Axiom pow10tab'init : val.

Axiom pow10postab32'init : val.

Axiom pow10negtab32'init : val.

Axiom _sin'init : val.

Axiom _cos'init : val.

Axiom _tanP'init : val.

Axiom _tanQ'init : val.

Axiom tanhP'init : val.

Axiom tanhQ'init : val.

Axiom mPi4'init : val.

Definition pkg_name' : go_string := "math".

Definition vars' : list (go_string * go_type) := [("useFMA"%go, boolT); ("_gamP"%go, arrayT 7 float64T); ("_gamQ"%go, arrayT 8 float64T); ("_gamS"%go, arrayT 5 float64T); ("p0R8"%go, arrayT 6 float64T); ("p0S8"%go, arrayT 5 float64T); ("p0R5"%go, arrayT 6 float64T); ("p0S5"%go, arrayT 5 float64T); ("p0R3"%go, arrayT 6 float64T); ("p0S3"%go, arrayT 5 float64T); ("p0R2"%go, arrayT 6 float64T); ("p0S2"%go, arrayT 5 float64T); ("q0R8"%go, arrayT 6 float64T); ("q0S8"%go, arrayT 6 float64T); ("q0R5"%go, arrayT 6 float64T); ("q0S5"%go, arrayT 6 float64T); ("q0R3"%go, arrayT 6 float64T); ("q0S3"%go, arrayT 6 float64T); ("q0R2"%go, arrayT 6 float64T); ("q0S2"%go, arrayT 6 float64T); ("p1R8"%go, arrayT 6 float64T); ("p1S8"%go, arrayT 5 float64T); ("p1R5"%go, arrayT 6 float64T); ("p1S5"%go, arrayT 5 float64T); ("p1R3"%go, arrayT 6 float64T); ("p1S3"%go, arrayT 5 float64T); ("p1R2"%go, arrayT 6 float64T); ("p1S2"%go, arrayT 5 float64T); ("q1R8"%go, arrayT 6 float64T); ("q1S8"%go, arrayT 6 float64T); ("q1R5"%go, arrayT 6 float64T); ("q1S5"%go, arrayT 6 float64T); ("q1R3"%go, arrayT 6 float64T); ("q1S3"%go, arrayT 6 float64T); ("q1R2"%go, arrayT 6 float64T); ("q1S2"%go, arrayT 6 float64T); ("_lgamA"%go, arrayT 12 float64T); ("_lgamR"%go, arrayT 7 float64T); ("_lgamS"%go, arrayT 7 float64T); ("_lgamT"%go, arrayT 15 float64T); ("_lgamU"%go, arrayT 6 float64T); ("_lgamV"%go, arrayT 6 float64T); ("_lgamW"%go, arrayT 7 float64T); ("pow10tab"%go, arrayT 32 float64T); ("pow10postab32"%go, arrayT 10 float64T); ("pow10negtab32"%go, arrayT 11 float64T); ("_sin"%go, arrayT 6 float64T); ("_cos"%go, arrayT 6 float64T); ("_tanP"%go, arrayT 3 float64T); ("_tanQ"%go, arrayT 5 float64T); ("tanhP"%go, arrayT 3 float64T); ("tanhQ"%go, arrayT 3 float64T); ("mPi4"%go, arrayT 20 uint64T)].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

End code.
End math.
