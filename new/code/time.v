(* autogenerated from time *)
From New.golang Require Import defn.

Module time.
Section code.
Context `{ffi_syntax}.


Axiom std0x'init : val.

Axiom longDayNames'init : val.

Axiom shortDayNames'init : val.

Axiom shortMonthNames'init : val.

Axiom longMonthNames'init : val.

Axiom errAtoi'init : val.

Axiom errBad'init : val.

Axiom errLeadingInt'init : val.

Axiom unitMap'init : val.

Axiom asynctimerchan'init : val.

Axiom daysBefore'init : val.

Axiom startNano'init : val.

Axiom UTC'init : val.

Axiom utcLoc'init : val.

Axiom Local'init : val.

Axiom localLoc'init : val.

Axiom localOnce'init : val.

Axiom unnamedFixedZones'init : val.

Axiom unnamedFixedZonesOnce'init : val.

Axiom errLocation'init : val.

Axiom zoneinfo'init : val.

Axiom zoneinfoOnce'init : val.

Axiom loadFromEmbeddedTZData'init : val.

Axiom errBadData'init : val.

Axiom loadTzinfoFromTzdata'init : val.

Axiom platformZoneSources'init : val.

Definition pkg_name' : go_string := "time".

Definition vars' : list (go_string * go_type) := [("std0x"%go, arrayT 6 intT); ("longDayNames"%go, sliceT); ("shortDayNames"%go, sliceT); ("shortMonthNames"%go, sliceT); ("longMonthNames"%go, sliceT); ("errAtoi"%go, error); ("errBad"%go, error); ("errLeadingInt"%go, error); ("unitMap"%go, mapT stringT uint64T); ("asynctimerchan"%go, ptrT); ("daysBefore"%go, arrayT 13 int32T); ("startNano"%go, int64T); ("UTC"%go, ptrT); ("utcLoc"%go, Location); ("Local"%go, ptrT); ("localLoc"%go, Location); ("localOnce"%go, sync.Once); ("unnamedFixedZones"%go, sliceT); ("unnamedFixedZonesOnce"%go, sync.Once); ("errLocation"%go, error); ("zoneinfo"%go, ptrT); ("zoneinfoOnce"%go, sync.Once); ("loadFromEmbeddedTZData"%go, funcT); ("errBadData"%go, error); ("loadTzinfoFromTzdata"%go, funcT); ("platformZoneSources"%go, sliceT)].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

End code.
End time.
