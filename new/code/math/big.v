(* autogenerated from math/big *)
From New.golang Require Import defn.

Module big.
Section code.
Context `{ffi_syntax}.


Axiom _Accuracy_index'init : val.

Axiom support_adx'init : val.

Axiom floatZero'init : val.

Axiom pow5tab'init : val.

Axiom _'init : val.

Axiom intOne'init : val.

Axiom natOne'init : val.

Axiom karatsubaThreshold'init : val.

Axiom basicSqrThreshold'init : val.

Axiom karatsubaSqrThreshold'init : val.

Axiom natPool'init : val.

Axiom errNoDigits'init : val.

Axiom leafSize'init : val.

Axiom cacheBase10'init : val.

Axiom ratZero'init : val.

Axiom _RoundingMode_index'init : val.

Axiom threeOnce'init : val.

Definition pkg_name' : go_string := "math/big".

Definition vars' : list (go_string * go_type) := [("_Accuracy_index"%go, arrayT 4 uint8T); ("support_adx"%go, boolT); ("floatZero"%go, Float); ("pow5tab"%go, arrayT 28 uint64T); ("_"%go, fmt.Scanner); ("_"%go, fmt.Formatter); ("intOne"%go, ptrT); ("_"%go, fmt.Formatter); ("_"%go, fmt.Scanner); ("natOne"%go, nat); ("karatsubaThreshold"%go, intT); ("basicSqrThreshold"%go, intT); ("karatsubaSqrThreshold"%go, intT); ("natPool"%go, sync.Pool); ("errNoDigits"%go, error); ("leafSize"%go, intT); ("cacheBase10"%go, structT [
               "Mutex" :: sync.Mutex;
               "table" :: arrayT 64 divisor
             ]); ("ratZero"%go, Rat); ("_"%go, fmt.Scanner); ("_RoundingMode_index"%go, arrayT 7 uint8T); ("threeOnce"%go, structT [
               "Once" :: sync.Once;
               "v" :: ptrT
             ])].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

End code.
End big.
