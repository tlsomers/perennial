(* autogenerated from github.com/mit-pdos/gokv/globals_test *)
From New.golang Require Import defn.

Module main.
Section code.
Context `{ffi_syntax}.


Axiom foo : val.

Axiom other : val.

Axiom bar : val.

Axiom init : val.

Axiom main : val.

Definition pkg_name' : go_string := "github.com/mit-pdos/gokv/globals_test".

Definition vars' : list (go_string * go_type) := [("GlobalX"%go, uint64T); ("globalY"%go, stringT); ("globalA"%go, stringT); ("globalB"%go, stringT)].

Definition functions' : list (go_string * val) := [("foo"%go, foo); ("other"%go, other); ("bar"%go, bar); ("init"%go, init); ("init"%go, init); ("main"%go, main)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init pkg_name' vars' functions' msets' (Î»: <>,
      exception_do (let: "$r0" := ((func_call #pkg_name' #"foo"%go) #()) in
      do:  ((globals.get #pkg_name' #"GlobalX"%go) <-[uint64T] "$r0");;;
      let: "$r0" := #"a"%go in
      do:  ((globals.get #pkg_name' #"globalA"%go) <-[stringT] "$r0");;;
      let: "$r0" := #"b"%go in
      do:  ((globals.get #pkg_name' #"globalB"%go) <-[stringT] "$r0"))
      ).

End code.
End main.
