(* autogenerated from github.com/mit-pdos/gokv/lockservice *)
From New.golang Require Import defn.

Module lockservice.
Section code.
Context `{ffi_syntax}.


Definition LockClerk : go_type := structT [
  "kv" :: kv.KvCput
].

Axiom LockClerk__Lock : val.

Axiom LockClerk__Unlock : val.

Axiom MakeLockClerk : val.

Definition pkg_name' : go_string := "github.com/mit-pdos/gokv/lockservice".

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [("MakeLockClerk"%go, MakeLockClerk)].

Definition msets' : list (go_string * (list (go_string * val))) := [("LockClerk"%go, []); ("LockClerk'ptr"%go, [("Lock"%go, LockClerk__Lock); ("Unlock"%go, LockClerk__Unlock)])].

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init pkg_name' vars' functions' msets' (Î»: <>,
      exception_do (do:  #())
      ).

End code.
End lockservice.
