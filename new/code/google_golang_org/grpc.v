(* autogenerated from google.golang.org/grpc *)
From New.golang Require Import defn.

Module grpc.
Section code.
Context `{ffi_syntax}.


Axiom DefaultBackoffConfig'init : val.

Axiom setConnectedAddress'init : val.

Axiom unaryStreamDesc'init : val.

Axiom ErrClientConnClosing'init : val.

Axiom errNoTransportSecurity'init : val.

Axiom _'init : val.

Axiom emptyServiceConfig'init : val.

Axiom ErrClientConnTimeout'init : val.

Axiom globalDialOptions'init : val.

Axiom globalPerTargetDialOptions'init : val.

Axiom errContextCanceled'init : val.

Axiom errContextDeadline'init : val.

Axiom statusOK'init : val.

Axiom logger'init : val.

Axiom defaultServerOptions'init : val.

Axiom globalServerOptions'init : val.

Axiom ErrServerStopped'init : val.

Axiom errDuplicatedName'init : val.

Axiom metadataFromOutgoingContextRaw'init : val.

Axiom EnableTracing'init : val.

Definition pkg_name' : go_string := "google.golang.org/grpc".

Definition vars' : list (go_string * go_type) := [("DefaultBackoffConfig"%go, BackoffConfig); ("setConnectedAddress"%go, funcT); ("unaryStreamDesc"%go, ptrT); ("ErrClientConnClosing"%go, error); ("errNoTransportSecurity"%go, error); ("_"%go, ClientConnInterface); ("emptyServiceConfig"%go, ptrT); ("ErrClientConnTimeout"%go, error); ("_"%go, baseCodec); ("_"%go, encoding.CodecV2); ("globalDialOptions"%go, sliceT); ("globalPerTargetDialOptions"%go, sliceT); ("errContextCanceled"%go, error); ("errContextDeadline"%go, error); ("statusOK"%go, ptrT); ("logger"%go, grpclog.DepthLoggerV2); ("defaultServerOptions"%go, serverOptions); ("globalServerOptions"%go, sliceT); ("ErrServerStopped"%go, error); ("_"%go, http.Handler); ("errDuplicatedName"%go, error); ("metadataFromOutgoingContextRaw"%go, funcT); ("_"%go, ServerStreamingClient stringT); ("_"%go, ClientStreamingClient intT stringT); ("_"%go, BidiStreamingClient intT stringT); ("_"%go, ServerStreamingServer stringT); ("_"%go, ClientStreamingServer intT stringT); ("_"%go, BidiStreamingServer intT stringT); ("EnableTracing"%go, boolT)].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

End code.
End grpc.
