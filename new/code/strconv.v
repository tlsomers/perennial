(* autogenerated from strconv *)
From New.golang Require Import defn.

Module strconv.
Section code.
Context `{ffi_syntax}.


Axiom optimize'init : val.

Axiom powtab'init : val.

Axiom float64pow10'init : val.

Axiom float32pow10'init : val.

Axiom ErrRange'init : val.

Axiom ErrSyntax'init : val.

Axiom leftcheats'init : val.

Axiom detailedPowersOfTen'init : val.

Axiom float32info'init : val.

Axiom float64info'init : val.

Axiom uint64pow10'init : val.

Axiom isPrint16'init : val.

Axiom isNotPrint16'init : val.

Axiom isPrint32'init : val.

Axiom isNotPrint32'init : val.

Axiom isGraphic'init : val.

Definition pkg_name' : go_string := "strconv".

Definition vars' : list (go_string * go_type) := [("optimize"%go, boolT); ("powtab"%go, sliceT); ("float64pow10"%go, sliceT); ("float32pow10"%go, sliceT); ("ErrRange"%go, error); ("ErrSyntax"%go, error); ("leftcheats"%go, sliceT); ("detailedPowersOfTen"%go, arrayT 696 (arrayT 2 uint64T)); ("float32info"%go, floatInfo); ("float64info"%go, floatInfo); ("uint64pow10"%go, arrayT 20 uint64T); ("isPrint16"%go, sliceT); ("isNotPrint16"%go, sliceT); ("isPrint32"%go, sliceT); ("isNotPrint32"%go, sliceT); ("isGraphic"%go, sliceT)].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

End code.
End strconv.
