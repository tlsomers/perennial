(* autogenerated from github.com/mit-pdos/gokv/mpaxos/example *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_com.mit_pdos.gokv.mpaxos.

From Perennial.goose_lang Require Import ffi.grove_prelude.

(* if op is non-empty, set the state to that, otherwise return the current value *)
Definition applyFn: val :=
  rec: "applyFn" "state" "op" :=
    (if: (slice.len "op") > #0
    then (SliceSkip byteT "op" #1, NewSlice byteT #0)
    else ("state", "state")).

Definition Clerk := struct.decl [
  "c" :: ptrT
].

Definition MakeClerk: val :=
  rec: "MakeClerk" "config" :=
    struct.new Clerk [
      "c" ::= mpaxos.MakeClerk "config"
    ].

Definition StartServer: val :=
  rec: "StartServer" "fname" "me" "config" :=
    mpaxos.StartServer "fname" "me" applyFn "config";;
    #().

Definition Clerk__Put: val :=
  rec: "Clerk__Put" "ck" "val" :=
    let: "op" := NewSlice byteT ((slice.len "val") + #1) in
    mpaxos.Clerk__Apply (struct.loadF Clerk "c" "ck") "op";;
    #().

Definition Clerk__Get: val :=
  rec: "Clerk__Get" "ck" :=
    mpaxos.Clerk__Apply (struct.loadF Clerk "c" "ck") (NewSlice byteT #0).
