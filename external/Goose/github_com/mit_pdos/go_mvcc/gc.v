(* autogenerated from github.com/mit-pdos/go-mvcc/gc *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_com.mit_pdos.go_mvcc.index.

Section code.
Context `{ext_ty: ext_types}.
Local Coercion Var' s: expr := Var s.

Definition GC := struct.decl [
  "idx" :: ptrT
].

Definition MkGC: val :=
  rec: "MkGC" "idx" :=
    let: "gc" := struct.alloc GC (zero_val (struct.t GC)) in
    struct.storeF GC "idx" "gc" "idx";;
    "gc".

Definition GC__Start: val :=
  rec: "GC__Start" "gc" "tidMin" :=
    let: "idx" := struct.loadF GC "idx" "gc" in
    let: "keys" := index.Index__GetKeys "idx" in
    ForSlice uint64T <> "k" "keys"
      (let: "tuple" := index.Index__GetTuple "idx" "k" in
      tuple.Tuple__RemoveVersions "tuple" "tidMin");;
    #().

End code.
