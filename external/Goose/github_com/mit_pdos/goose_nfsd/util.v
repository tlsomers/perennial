(* autogenerated from github.com/mit-pdos/goose-nfsd/util *)
From Perennial.goose_lang Require Import prelude.
From Perennial.goose_lang Require Import ffi.disk_prelude.

Definition Debug : expr := #0.

Definition DPrintf: val :=
  λ: "level" "format" "a",
    (if: "level" ≤ Debug
    then
      (* log.Printf(format, a...) *)
      #()
    else #()).

Definition RoundUp: val :=
  λ: "n" "sz",
    "n" + "sz" - #1 `quot` "sz".

Definition Min: val :=
  λ: "n" "m",
    (if: "n" < "m"
    then "n"
    else "m").

(* returns n+m>=2^64 (if it were computed at infinite precision) *)
Definition SumOverflows: val :=
  λ: "n" "m",
    "n" + "m" < "n".

Definition SumOverflows32: val :=
  λ: "n" "m",
    "n" + "m" < "n".
