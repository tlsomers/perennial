(* autogenerated from github.com/mit-pdos/tulip/quorum *)
From Perennial.goose_lang Require Import prelude.

Section code.
Context `{ext_ty: ext_types}.

Definition FastQuorum: val :=
  rec: "FastQuorum" "n" :=
    (("n" + #1) * #3) `quot` #4.

Definition ClassicQuorum: val :=
  rec: "ClassicQuorum" "n" :=
    ("n" `quot` #2) + #1.

Definition Half: val :=
  rec: "Half" "n" :=
    ("n" + #1) `quot` #2.

Definition swap: val :=
  rec: "swap" "ns" "i" "j" :=
    let: "tmp" := SliceGet uint64T "ns" "i" in
    SliceSet uint64T "ns" "i" (SliceGet uint64T "ns" "j");;
    SliceSet uint64T "ns" "j" "tmp";;
    #().

Definition sort: val :=
  rec: "sort" "ns" :=
    let: "i" := ref_to uint64T #1 in
    Skip;;
    (for: (λ: <>, (![uint64T] "i") < (slice.len "ns")); (λ: <>, Skip) := λ: <>,
      let: "j" := ref_to uint64T (![uint64T] "i") in
      Skip;;
      (for: (λ: <>, (![uint64T] "j") > #0); (λ: <>, Skip) := λ: <>,
        (if: (SliceGet uint64T "ns" ((![uint64T] "j") - #1)) ≤ (SliceGet uint64T "ns" (![uint64T] "j"))
        then Break
        else
          swap "ns" ((![uint64T] "j") - #1) (![uint64T] "j");;
          "j" <-[uint64T] ((![uint64T] "j") - #1);;
          Continue));;
      "i" <-[uint64T] ((![uint64T] "i") + #1);;
      Continue);;
    #().

(* NB: Follow the proof of wrbuf.sortEntsByKey *)
Definition Median: val :=
  rec: "Median" "ns" :=
    sort "ns";;
    SliceGet uint64T "ns" ((slice.len "ns") `quot` #2).

End code.
