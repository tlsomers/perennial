(* autogenerated from github.com/mit-pdos/tulip/message *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_com.mit_pdos.tulip.tulip.

Section code.
Context `{ext_ty: ext_types}.

Definition TxnRequest := struct.decl [
  "Kind" :: uint64T;
  "Timestamp" :: uint64T;
  "Rank" :: uint64T;
  "PartialWrites" :: tulip.KVMap;
  "ParticipantGroups" :: slice.T uint64T
].

Definition TxnResponse := struct.decl [
  "Kind" :: uint64T;
  "Timestamp" :: uint64T;
  "Result" :: uint64T;
  "Key" :: stringT;
  "Version" :: struct.t tulip.Version;
  "Rank" :: uint64T;
  "Prepared" :: boolT;
  "Validated" :: boolT;
  "PartialWrites" :: tulip.KVMap
].

Definition MSG_TXN_READ : expr := #100.

Definition MSG_TXN_FAST_PREPARE : expr := #201.

Definition MSG_TXN_VALIDATE : expr := #202.

Definition MSG_TXN_PREPARE : expr := #203.

Definition MSG_TXN_UNPREPARE : expr := #204.

Definition MSG_TXN_QUERY : expr := #205.

Definition MSG_TXN_INQUIRE : expr := #206.

Definition MSG_TXN_REFRESH : expr := #210.

Definition MSG_TXN_COMMIT : expr := #300.

Definition MSG_TXN_ABORT : expr := #301.

Definition EncodeTxnRead: val :=
  rec: "EncodeTxnRead" "ts" "key" :=
    slice.nil.

Definition EncodeTxnFastPrepare: val :=
  rec: "EncodeTxnFastPrepare" "ts" "pwrs" "ptgs" :=
    slice.nil.

Definition DecodeTxnRequest: val :=
  rec: "DecodeTxnRequest" "data" :=
    struct.mk TxnRequest [
    ].

Definition DecodeTxnResponse: val :=
  rec: "DecodeTxnResponse" "data" :=
    struct.mk TxnResponse [
    ].

(* [REQUEST-VOTE, Term, CommittedLSN]
   [APPEND-ENTRIES, Term, CommittedLSN, LSNEntries, Entries] *)
Definition PaxosRequest := struct.decl [
  "Kind" :: uint64T;
  "Term" :: uint64T;
  "CommittedLSN" :: uint64T;
  "EntriesLSN" :: uint64T;
  "Entries" :: slice.T stringT
].

(* [REQUEST-VOTE, NodeID, Term, TermEntries, Entries]
   [APPEND-ENTRIES, NodeID, Term, MatchedLSN] *)
Definition PaxosResponse := struct.decl [
  "Kind" :: uint64T;
  "NodeID" :: uint64T;
  "Term" :: uint64T;
  "TermEntries" :: uint64T;
  "Entries" :: slice.T stringT;
  "MatchedLSN" :: uint64T
].

Definition MSG_PAXOS_REQUEST_VOTE : expr := #0.

Definition MSG_PAXOS_APPEND_ENTRIES : expr := #1.

Definition DecodePaxosRequest: val :=
  rec: "DecodePaxosRequest" "data" :=
    struct.mk PaxosRequest [
    ].

Definition DecodePaxosResponse: val :=
  rec: "DecodePaxosResponse" "data" :=
    struct.mk PaxosResponse [
    ].

Definition EncodePaxosRequestVoteRequest: val :=
  rec: "EncodePaxosRequestVoteRequest" "term" "lsnc" :=
    slice.nil.

Definition EncodePaxosRequestVoteResponse: val :=
  rec: "EncodePaxosRequestVoteResponse" "nid" "term" "terma" "ents" :=
    slice.nil.

Definition EncodePaxosAppendEntriesRequest: val :=
  rec: "EncodePaxosAppendEntriesRequest" "term" "lsnc" "lsne" "ents" :=
    slice.nil.

Definition EncodePaxosAppendEntriesResponse: val :=
  rec: "EncodePaxosAppendEntriesResponse" "nid" "term" "lsn" :=
    slice.nil.

End code.
