(* autogenerated from github.com/mit-pdos/gokv/dmvcc/example *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.index.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txn.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txncoordinator.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txnmgr.
From Goose Require github_dot_com.tchajed.goose.machine.
From Goose Require log.

Section code.
Context `{ext_ty: ext_types}.
Local Coercion Var' s: expr := Var s.

Definition main: val :=
  rec: "main" <> :=
    let: "indexHost" := ref_zero ptrT in
    let: "$a0" := index.MakeServer #() in
    do:  "indexHost" <-[ptrT] "$a0";;;
    let: "txnMgrHost" := ref_zero ptrT in
    let: "$a0" := txnmgr.MakeServer #() in
    do:  "txnMgrHost" <-[ptrT] "$a0";;;
    let: "txnCoordHost" := ref_zero ptrT in
    let: "$a0" := txncoordinator.MakeServer (![ptrT] "indexHost") in
    do:  "txnCoordHost" <-[ptrT] "$a0";;;
    do:  Fork (let: "txnCk" := ref_zero ptrT in
          let: "$a0" := txn.Begin (![ptrT] "txnMgrHost") (![ptrT] "txnCoordHost") (![ptrT] "indexHost") in
          do:  "txnCk" <-[ptrT] "$a0";;;
          do:  txn.Clerk__DoTxn (![ptrT] "txnCk") (λ: "t",
            do:  txn.Clerk__Put (![ptrT] "t") #0 #(str "hello");;;
            do:  txn.Clerk__Put (![ptrT] "t") #1 #(str "world");;;
            return: (#true);;;
            do:  #()
            );;;
          do:  #());;;
    do:  Fork (let: "txnCk" := ref_zero ptrT in
          let: "$a0" := txn.Begin (![ptrT] "txnMgrHost") (![ptrT] "txnCoordHost") (![ptrT] "indexHost") in
          do:  "txnCk" <-[ptrT] "$a0";;;
          do:  txn.Clerk__DoTxn (![ptrT] "txnCk") (λ: "t",
            (if: (StringLength (txn.Clerk__Get (![ptrT] "t") #0)) > #0
            then
              do:  machine.Assert ((StringLength (txn.Clerk__Get (![ptrT] "t") #1)) > #0);;;
              do:  #()
            else #());;;
            do:  log.Printf #(str "Val on txn2: '%!!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)s(MISSING)'") (txn.Clerk__Get (![ptrT] "t") #1);;;
            return: (#true);;;
            do:  #()
            );;;
          do:  #());;;
    do:  machine.Sleep #100000000;;;
    do:  #().

End code.
